@model Kartverket.MetadataEditor.Models.MetadataViewModel
@using Resources
@{
    ViewBag.Title = @Resources.UI.EditMetadata;
    bool showProductSheetGeneratorUrl = false;
    var ProductSheetGeneratorUrl = System.Web.Configuration.WebConfigurationManager.AppSettings["ProductSheetGeneratorUrl"];
    if (ProductSheetGeneratorUrl != null && ProductSheetGeneratorUrl != "")
        showProductSheetGeneratorUrl = true;
}

@section ActionMenu {
    <div class="btn-group">
        <a href="@ViewBag.GeoNetworkXmlDownloadUrl" class="btn btn-sm btn-default">
            <i class="glyphicon glyphicon-file"></i> Last ned XML
        </a>
        <a href="@ViewBag.GeoNetworkViewUrl" class="btn btn-sm btn-default">
            <span class="glyphicon glyphicon-share-alt"></span> Vis i metadatakatalogen
        </a>
        @if (Model.IsService())
        {
            <a href="@Url.Action("Index", "Service", new { uuid = @Model.Uuid })" class="btn btn-sm btn-default">
                <span class="glyphicon glyphicon-plus-sign"></span> Opprett metadata for WMS-lag
            </a>
        }
        @if (Model.IsDataset() && showProductSheetGeneratorUrl) 
        {   
        <a href="@ViewBag.CreateProductSheetUrl" class="btn btn-sm btn-default"><span class="glyphicon glyphicon-list-alt"></span> Opprett produktark</a>
        }
    </div>
}


<div class="pull-right">@System.Web.Configuration.WebConfigurationManager.AppSettings["EditorUrl"]
    <p class="text-right"><small>UUID: @Model.Uuid</small><br />
    <small>Metadata sist oppdatert: @Model.DateMetadataUpdated</small>
    <br />
    <small>
    @if (Model.HierarchyLevel == "service")
    {
        <span class="label label-info">@Resources.UI.Metadata_Type_Service</span>
    }
    else if (Model.HierarchyLevel == "dataset")
    {
        <span class="label label-success">@Resources.UI.Metadata_Type_Dataset</span>
    }
    else if (Model.HierarchyLevel == "software")
    {
        <span class="label label-warning">Applikasjon</span>
    }
    else
    {
        <span class="label label-warning">@Model.HierarchyLevel</span>
    }
    @if (!string.IsNullOrWhiteSpace(Model.ParentIdentifier) && Model.HierarchyLevel == "service")
    {
        <span class="label label-info">WMS-Lag</span>
    }
    
    @if (!string.IsNullOrWhiteSpace(Model.ParentIdentifier) && Model.HierarchyLevel == "service")
    {
        <span>[<a href="@Url.Action("Edit", new { uuid = @Model.ParentIdentifier})">Lenke til tjenesten</a>]</span>
    }

    </small>
</p>
</div>

<h3>@ViewBag.Title</h3>
<h2>@Model.Title</h2>

@if (ViewBag.Saved == true)
{
    <div class="alert alert-success">
        Metadata ble lagret.
    </div>
} 
@if (ViewBag.ErrorMessage != null)
{
    <div class="alert alert-danger">
        Det har oppstått en feil: @ViewBag.ErrorMessage
    </div>    
}

@Html.ValidationSummary(false,"Skjemaet er ikke korrekt utfylt. Vennligst rett opp følgende feil og mangler:",new { @class = "alert alert-danger"})



<ul class="nav nav-tabs" style="clear:both">
    <li class="active"><a href="#home" id="homelink" data-toggle="tab"><span class="glyphicon glyphicon-home"></span>  Grunnleggende</a></li>
    <li><a href="#timeandspace" id="timeandspacelink" data-toggle="tab"><span class="glyphicon glyphicon-list-alt"></span> Tid og rom</a></li>
    <li><a href="#contact" id="contactlink" data-toggle="tab"><span class="glyphicon glyphicon-user"></span> Kontaktinformasjon</a></li>
    <li><a href="#distribution" id="distributionlink" data-toggle="tab"><span class="glyphicon glyphicon-globe"></span> Distribusjon</a></li>
    <li><a href="#documents" id="documentslink" data-toggle="tab"><span class="glyphicon glyphicon-file"></span> Dokumenter</a></li>
    <li><a href="#constraints" id="constraintslink" data-toggle="tab"><span class="glyphicon glyphicon-lock"></span> Restriksjoner</a></li>
    <li><a href="#quality" id="qualitylink" data-toggle="tab"><span class="glyphicon glyphicon-ok-sign"></span> Kvalitet</a></li>
    <li><a href="#keywords" id="keywordslink" data-toggle="tab"><span class="glyphicon glyphicon-ok-sign"></span> Nøkkelord</a></li>
    <li><a href="#english" id="englishlink" data-toggle="tab"><span class="glyphicon glyphicon-flag"></span> Engelsk</a></li>
</ul>

<form action="@Url.Action("Edit")" method="post" class="form form-horizontal" role="form">
    @Html.HiddenFor(m => m.Uuid)
    @Html.HiddenFor(m => m.DateMetadataUpdated)
    @Html.HiddenFor(m => m.HierarchyLevel)

    <div class="tab-content">
        <div class="tab-pane active" id="home">
            @Html.Partial("_Basic", Model)
        </div>

        <div class="tab-pane" id="timeandspace">
            @Html.Partial("_TimeAndSpace", Model)
        </div>
        
        <div class="tab-pane" id="contact">
            @Html.Partial("_Contact", Model)
        </div>

        <div class="tab-pane" id="distribution">
            @Html.Partial("_Distribution", Model)
        </div>
        
        <div class="tab-pane" id="documents">
            @Html.Partial("_Documents", Model)
        </div>

        <div class="tab-pane" id="constraints">
            @Html.Partial("_Constraints", Model)
        </div>

        <div class="tab-pane" id="quality">
            @Html.Partial("_Quality", Model)
        </div>
        
        <div class="tab-pane" id="keywords">
            @Html.Partial("_Keywords", Model)
        </div>

        <div class="tab-pane" id="english">
            @Html.Partial("_English", Model)
        </div>

    </div>

    <div class="form-group">
        <div class="col-sm-offset-2 col-sm-4">
            <button name="action" type="submit" class="btn btn-primary" value="@UI.Button_Save">@UI.Button_Save</button>
            <button name="action" type="submit" class="btn btn-primary" value="@UI.Button_SaveAsXml">@UI.Button_SaveAsXml</button>
        </div>
    </div>


</form>

@section scripts {
    <script>
        $(function () {

            //  add warning sign to tabs containing input fields with error.
            $('.input-validation-error').each(function () {
                var $inputElement = $(this);
                $inputElement.closest('.form-group').addClass('has-error');

                var id = $inputElement.closest(".tab-pane").attr('id');
                var $tabLink = $('ul.nav-tabs a[href=#' + id + ']');

                $tabLink.parent().addClass("has-error");

                var warning = $tabLink.parent().find('span.glyphicon-warning-sign');
                if (warning.length == 0) {
                    $tabLink.before('<span class="glyphicon glyphicon-warning-sign" title="Skillearket inneholder feil og mangler som må rettes opp før innsending av skjemaet."></span>');
                }
            });

            var menu_state = $.cookie('navtabselected');

            $('#homelink').click(function (event) {
                $.cookie('navtabselected', 'home');
            });

            $('#timeandspacelink').click(function (event) {
                $.cookie('navtabselected', 'timeandspace');
            });

            $('#contactlink').click(function (event) {
                $.cookie('navtabselected', 'contact');
            });

            $('#distributionlink').click(function (event) {
                $.cookie('navtabselected', 'distribution');
            });

            $('#documentslink').click(function (event) {
                $.cookie('navtabselected', 'documents');
            });

            $('#constraintslink').click(function (event) {
                $.cookie('navtabselected', 'constraints');
            });

            $('#qualitylink').click(function (event) {
                $.cookie('navtabselected', 'quality');
            });

            $('#keywordslink').click(function (event) {
                $.cookie('navtabselected', 'keywords');
            });

            $('#englishlink').click(function (event) {
                $.cookie('navtabselected', 'english');
            });

            if (menu_state == 'home' || menu_state == null)
                $('#homelink').click();
            else if(menu_state == 'timeandspace')
                $('#timeandspacelink').click();
            else if (menu_state == 'contact')
                $('#contactlink').click();
            else if (menu_state == 'distribution')
                $('#distributionlink').click();
            else if (menu_state == 'documents')
                $('#documentslink').click();
            else if (menu_state == 'constraints')
                $('#constraintslink').click();
            else if (menu_state == 'quality')
                $('#qualitylink').click();
            else if (menu_state == 'keywords')
                $('#keywordslink').click();
            else if (menu_state == 'english')
                $('#englishlink').click();


            $('#uploadThumbnailFile').fileupload({
                dataType: 'json',
                url: '/Metadata/UploadThumbnail',
                add: function (e, data) {

                    $("#uploadThumbnailButton").on("click", function(event) {
                        event.preventDefault();

                        console.log(data);
                        data.formData = {
                            "uuid": "@Model.Uuid",
                            "scaleImage": $('#uploadScaleImage').prop('checked')
                        };

                        data.submit();
                    });
                },
                done: function (e, data) {
                    console.log("File uploaded: " + data.result.filename);
                    $("#thumbnailUrl").val('@ViewBag.ThumbnailUrl' + data.result.filename);
                    $('#uploadThumbnailStatus').text('Filen er lastet opp. Velg type og trykk på "legg til" for å knytte bildet til metadataene.');
                }
            });

            $("#thumbnailAdd").click(function (event) {
                event.preventDefault();
                if ($('#thumbnailUrl').val().trim() == '') { alert('URL mangler'); return false; }

                var $thumbnails = $("#thumbnails");

                var itemIndex = $('li', $thumbnails).length;

                var $thumbnailType = $("#thumbnailType");
                var $thumbnailUrl = $("#thumbnailUrl");

                var $item = $('<li />', { "class": 'thumbnail clearfix' });

                var $itemImage = $('<img />', {
                    src: $thumbnailUrl.val(),
                    width: '200',
                });

                var $itemType = $('<p />').append('<strong>Type</strong> ').append($thumbnailType.val());
                var $itemUrl = $('<p />').append('<strong>Url</strong> ').append($thumbnailUrl.val());

                var $itemTypeHidden = $('<input />', {
                    type: 'hidden',
                    name: 'Thumbnails[' + itemIndex + '].Type',
                    value: $thumbnailType.val()
                });

                var $itemUrlHidden = $('<input />', {
                    type: 'hidden',
                    name: 'Thumbnails['+ itemIndex + '].URL',
                    value: $thumbnailUrl.val()
                });

                $item.append($itemImage);
                $item.append($itemType);
                $item.append($itemTypeHidden);
                $item.append($itemUrl);
                $item.append($itemUrlHidden);
                $item.append('<button class="thumbnailRemove btn btn-default pull-right"><span class="glyphicon glyphicon-trash"></span> Slett</button>');

                $thumbnails.append($item);

                $thumbnailType.val('');
                $thumbnailUrl.val('');
            });

            $('button.thumbnailRemove').click(function (event) {
                event.preventDefault();
                $(this).parent().remove();
                
                $('#thumbnails li').each(function (index, value) {
                    var $hiddenItemsForRow = $('input[type=hidden]', value);
                    $hiddenItemsForRow.each(function(hiddenIndex, hiddenValue) {
                        var name = $(hiddenValue).attr("name");
                        console.log(name);
                        if (name.indexOf('.Type') !== -1) {
                            $(hiddenValue).attr('name', 'Thumbnails[' + index + '].Type');
                        } else if (name.indexOf('.URL') !== -1) {
                            $(hiddenValue).attr('name', 'Thumbnails[' + index + '].URL');
                        }
                    });
                });
            });

            // help text

            $("a.help-text-toggle").click(function (event) {
                event.preventDefault();
                var helpTextId = $(this).data("help-text-id");
                $("#" + helpTextId).toggle();
            });

            // add help icon to each help text paragraph
            $(".help-text").prepend("<span class=\"badge\">?</span> ");

            // format


            $("#SpatialRepresentation").change(function (event) {
                event.preventDefault();
                var selectedSpatialRepresentation = $("#SpatialRepresentation").val();

                if (selectedSpatialRepresentation == "vector") {

                    $('#DistributionFormatName').children('option:not(:first)').remove();

                    $('#DistributionFormatName').append('<option val="SOSI">SOSI</option>');
                    $('#DistributionFormatName').append('<option val="ASCII x,y,z">ASCII x,y,z</option>');
                    $('#DistributionFormatName').append('<option val="DOS/OPeNDAP">DOS/OPeNDAP</option>');
                    $('#DistributionFormatName').append('<option val="DXF">DXF</option>');
                    $('#DistributionFormatName').append('<option val="ESRI Filgeodatabase">ESRI Filgeodatabase</option>');
                    $('#DistributionFormatName').append('<option val="ESRI Geodatabase">ESRI Geodatabase</option>');
                    $('#DistributionFormatName').append('<option val="ESRI Shape">ESRI Shape</option>');
                    $('#DistributionFormatName').append('<option val="GeoJSON">GeoJSON</option>');
                    $('#DistributionFormatName').append('<option val="GML">GML</option>');
                    $('#DistributionFormatName').append('<option val="GPX">GPX</option>');
                    $('#DistributionFormatName').append('<option val="KML">KML</option>');
                    $('#DistributionFormatName').append('<option val="KMZ">KMZ</option>');
                    $('#DistributionFormatName').append('<option val="LAS">LAS</option>');
                    $('#DistributionFormatName').append('<option val="LAZ">LAZ</option>');
                    $('#DistributionFormatName').append('<option val="MapInfo (MIF/MID)">MapInfo (MIF/MID)</option>');
                    $('#DistributionFormatName').append('<option val="MapInfo (TAB)">MapInfo (TAB)</option>');
                    $('#DistributionFormatName').append('<option val="Microstation DGN">Microstation DGN</option>');
                    $('#DistributionFormatName').append('<option val="OLEX">OLEX</option>');
                    $('#DistributionFormatName').append('<option val="PDF">PDF</option>');
                    $('#DistributionFormatName').append('<option val="RDF">RDF</option>');
                    $('#DistributionFormatName').append('<option val="S57">S57</option>');
                    $('#DistributionFormatName').append('<option val="SQLite/SpatialLite">SQLite/SpatialLite</option>');
                    $('#DistributionFormatName').append('<option val="XML">XML</option>');
                }

                else if (selectedSpatialRepresentation == "grid") {

                    $('#DistributionFormatName').children('option:not(:first)').remove();

                    $('#DistributionFormatName').append('<option val="Arc ASCII Grid">Arc ASCII Grid</option>');
                    $('#DistributionFormatName').append('<option val="Arc SDE Raster">Arc SDE Raster</option>');
                    $('#DistributionFormatName').append('<option val="ASCII x,y,z">ASCII x,y,z</option>');
                    $('#DistributionFormatName').append('<option val="BMP">BMP</option>');
                    $('#DistributionFormatName').append('<option val="USGS DEM">USGS DEM</option>');
                    $('#DistributionFormatName').append('<option val="DTED">DTED</option>');
                    $('#DistributionFormatName').append('<option val="Erdas ECW">Erdas ECW</option>');
                    $('#DistributionFormatName').append('<option val="GeoTIFF">GeoTIFF</option>');
                    $('#DistributionFormatName').append('<option val="GFX">GFX</option>');
                    $('#DistributionFormatName').append('<option val="GRASS raster format">GRASS raster format</option>');
                    $('#DistributionFormatName').append('<option val="GRIB">GRIB</option>');
                    $('#DistributionFormatName').append('<option val="Erdas IMG">Erdas IMG</option>');
                    $('#DistributionFormatName').append('<option val="JPEG">JPEG</option>');
                    $('#DistributionFormatName').append('<option val="JPEG2000">JPEG2000</option>');
                    $('#DistributionFormatName').append('<option val="MrSID">MrSID</option>');
                    $('#DistributionFormatName').append('<option val="NetCDF">NetCDF</option>');
                    $('#DistributionFormatName').append('<option val="PNG">PNG</option>');
                    $('#DistributionFormatName').append('<option val="PPT">PPT</option>');
                    $('#DistributionFormatName').append('<option val="TIFF">TIFF</option>');

                }

                else if (selectedSpatialRepresentation == "textTable") {

                    $('#DistributionFormatName').children('option:not(:first)').remove();

                    $('#DistributionFormatName').append('<option val="CSV">CSV</option>');
                    $('#DistributionFormatName').append('<option val="Microsoft Excel">Microsoft Excel</option>');
                    $('#DistributionFormatName').append('<option val="DBF">DBF</option>');
                    $('#DistributionFormatName').append('<option val="Tekstfil">Tekstfil</option>');
                    
                }

                else if (selectedSpatialRepresentation == "tin") {

                    $('#DistributionFormatName').children('option:not(:first)').remove();

                    $('#DistributionFormatName').append('<option val="Intergraph TIN">Intergraph TIN</option>');
                    $('#DistributionFormatName').append('<option val="ESRI TIN">ESRI TIN</option>');
                    $('#DistributionFormatName').append('<option val="GEOPAK TIN">GEOPAK TIN</option>');
                    $('#DistributionFormatName').append('<option val="LandXML TIN">LandXML TIN</option>');

                }

                else if (selectedSpatialRepresentation == "stereoModel") {

                    $('#DistributionFormatName').children('option:not(:first)').remove();

                    $('#DistributionFormatName').append('<option val="Intergraph TIN">Intergraph TIN</option>');
                    $('#DistributionFormatName').append('<option val="JPEG">JPEG</option>');
                }

                else if (selectedSpatialRepresentation == "video") {

                    $('#DistributionFormatName').children('option:not(:first)').remove();

                    $('#DistributionFormatName').append('<option val="MPEG">MPEG</option>');
                    $('#DistributionFormatName').append('<option val="AVI">AVI</option>');
                    $('#DistributionFormatName').append('<option val="MOV">MOV</option>');
                    $('#DistributionFormatName').append('<option val="OGG">OGG</option>');
                    $('#DistributionFormatName').append('<option val="WMV">WMV</option>');
                    $('#DistributionFormatName').append('<option val="RealVideo">RealVideo</option>');
                    $('#DistributionFormatName').append('<option val="RMVB">RMVB</option>');
                    $('#DistributionFormatName').append('<option val="FLASH">FLASH</option>');
                    $('#DistributionFormatName').append('<option val="ASF">ASF</option>');
                    $('#DistributionFormatName').append('<option val="MP4">MP4</option>');
                    $('#DistributionFormatName').append('<option val="QuickTime">QuickTime</option>');
                }

            });

            $("#SpatialRepresentation").trigger("change");


            // distribution

            $('button#usePredefinedDistributionProtocol').click(function (event) {
                event.preventDefault();
                var selectedProtocol = $('select#predefinedDistributionProtocols').val();
                $('#DistributionProtocol').val(selectedProtocol);
            });

            // conformity 

            $("button#prefillConformityInspire").click(function (event) {
                event.preventDefault();
                $("#QualitySpecificationTitle").val("COMMISSION REGULATION (EU) No 1089/2010 of 23 November 2010 implementing Directive 2007/2/EC of the European Parliament and of the Council as regards interoperability of spatial data sets and services");
                $("#QualitySpecificationDate").val("2010-12-08");
                $("#QualitySpecificationDateType").val("publication");
                //$("#QualitySpecificationExplanation").val("See the referenced specification");
                $("#QualitySpecificationResult").prop('checked', true);
            });
            $("button#prefillConformitySosi").click(function (event) {
                event.preventDefault();
                $("#QualitySpecificationTitle").val("SOSI-fagområde: <Navn på fagområde>");
                $("#QualitySpecificationDate").val("2014-01-01");
                $("#QualitySpecificationDateType").val("publication");
                //$("#QualitySpecificationExplanation").val("See the referenced specification");
                $("#QualitySpecificationResult").prop('checked', true);
            });
            $("button#prefillConformitySosiSpec").click(function (event) {
                event.preventDefault();
                $("#QualitySpecificationTitle").val("SOSI-produktspesifikasjon: <Navn på produktspesifikasjon>");
                $("#QualitySpecificationDate").val("2014-01-01");
                $("#QualitySpecificationDateType").val("publication");
                //$("#QualitySpecificationExplanation").val("See the referenced specification");
                $("#QualitySpecificationResult").prop('checked', true);
            });

            // bounding box

            var $states = $('select#bboxState');
            var $counties = $('select#bboxCounty');

            var $countyList = $counties.find('option').clone();

            $states.change(function () {
                var $selectedStateNumber = $(this).find('option:selected').data('statenumber');
                var regex = new RegExp("^" + $selectedStateNumber);
                $counties.html($countyList.filter(function () {
                    return regex.test($(this).attr('data-countynumber'));
                }));
            }).change();


            $("button#bboxPrefill").click(function (event) {
                event.preventDefault();
                var $selectedCounty = $counties.find('option:selected');
                $("input#BoundingBoxNorth").val($selectedCounty.data('north'));
                $("input#BoundingBoxSouth").val($selectedCounty.data('south'));
                $("input#BoundingBoxEast").val($selectedCounty.data('east'));
                $("input#BoundingBoxWest").val($selectedCounty.data('west'));
            });

            // Check date not in future
            $("#DateUpdated").change(function (event) {
                event.preventDefault();
                var currentDate = new Date();
                var selectedDateStr = $('#DateUpdated').val();
                var selectedDateArr = selectedDateStr.split('.');
                var selectedDate = new Date(selectedDateArr[2], selectedDateArr[1] - 1, selectedDateArr[0]);
                if (selectedDate > currentDate) {
                    alert('Dato kan ikke være i fremtiden');
                    $('#DateUpdated').val(currentDate.getDate() + '.' + (currentDate.getMonth() + 1) + '.' + currentDate.getFullYear())
                }       
            });

            $("#DatePublished").change(function (event) {
                event.preventDefault();
                var currentDate = new Date();
                var selectedDateStr = $('#DatePublished').val();
                var selectedDateArr = selectedDateStr.split('.');
                var selectedDate = new Date(selectedDateArr[2], selectedDateArr[1] - 1, selectedDateArr[0]);
                if (selectedDate > currentDate) {
                    alert('Dato kan ikke være i fremtiden');
                    $('#DatePublished').val(currentDate.getDate() + '.' + (currentDate.getMonth() + 1) + '.' + currentDate.getFullYear())
                }
            });

            $("#DateCreated").change(function (event) {
                event.preventDefault();
                var currentDate = new Date();
                var selectedDateStr = $('#DateCreated').val();
                var selectedDateArr = selectedDateStr.split('.');
                var selectedDate = new Date(selectedDateArr[2], selectedDateArr[1] - 1, selectedDateArr[0]);
                if (selectedDate > currentDate) {
                    alert('Dato kan ikke være i fremtiden');
                    $('#DateCreated').val(currentDate.getDate() + '.' + (currentDate.getMonth() + 1) + '.' + currentDate.getFullYear())
                }
            });

            $("#DateMetadataValidFrom").change(function (event) {
                event.preventDefault();
                var selectedDateStr = $('#DateMetadataValidFrom').val();
                var selectedDateArr = selectedDateStr.split('.');
                var selectedDate = new Date(selectedDateArr[2], selectedDateArr[1] - 1, selectedDateArr[0]);
                var validToStr = $('#DateMetadataValidTo').val();
                var validToArr = validToStr.split('.');
                var ValidToDate = new Date(validToArr[2], validToArr[1] - 1, validToArr[0]);

                if (ValidToDate < selectedDate) {
                    alert('Gyldig fra dato må være mindre enn gyldig til dato');
                    var newDate = new Date(ValidToDate);
                    newDate.setDate(newDate.getDate() - 1);
                    $('#DateMetadataValidFrom').val(newDate.getDate() + '.' + (newDate.getMonth() + 1) + '.' + newDate.getFullYear())
                }
            });

            $("#DateMetadataValidTo").change(function (event) {
                event.preventDefault();
                var selectedDateStr = $('#DateMetadataValidTo').val();
                var selectedDateArr = selectedDateStr.split('.');
                var selectedDate = new Date(selectedDateArr[2], selectedDateArr[1] - 1, selectedDateArr[0]);
                var validFromStr = $('#DateMetadataValidFrom').val();
                var validFromArr = validFromStr.split('.');
                var ValidFromDate = new Date(validFromArr[2], validFromArr[1] - 1, validFromArr[0]);

                if (selectedDate < ValidFromDate) {
                    alert('Gyldig til dato må være større enn gyldig fra dato');
                    var newDate = new Date(ValidFromDate);
                    newDate.setDate(newDate.getDate() + 1);
                    $('#DateMetadataValidTo').val(newDate.getDate() + '.' + (newDate.getMonth() + 1) + '.' + newDate.getFullYear())
                }
            });


            // keywords

            function addKeyword(selectorPrefix, inputName, deleteLinkAttributes) {
                deleteLinkAttributes = (typeof deleteLinkAttributes === "undefined") ? null : deleteLinkAttributes;

                var $keywordInput = $('#' + selectorPrefix + '-text');

                var newKeyword = $keywordInput.val();

                var elementId = $('ul#' + selectorPrefix + ' li').length;

                var listItemId = selectorPrefix + "-" + elementId;

                var li = $('<li />', { "id": listItemId });
                li.append($('<span />', { "class": "label label-success", text: newKeyword }));
                li.append('&nbsp;');

                var link = $('<a />', {
                    "href": "",
                    "class": "keyword-delete",
                    "data-delete": listItemId,
                    "data-list": selectorPrefix + '-text',
                    "data-list-value": newKeyword
                });
                link.append("<small>Slett</small>");

                li.append(link);
                li.append($('<input />', { "type": "hidden", "name": inputName + "[" + elementId + "]", "value": newKeyword }));
                
                $('ul#' + selectorPrefix).append(li);

                return $keywordInput;
            };

            function addKeywordFromCodeList(selectorPrefix, inputName) {
                var $keywordInput = addKeyword(selectorPrefix, inputName);
                var $selected = $keywordInput.find("option:selected");
                $selected.attr("disabled", "disabled");
                $selected.removeAttr("selected");
            };

            function addKeywordFromTextbox(selectorPrefix, inputName) {
                var $keywordInput = addKeyword(selectorPrefix, inputName);
                $keywordInput.val('');
            }

            $('button#keywords-theme-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-theme-text').val().trim() == '')
                    alert('Vennligst fyll ut tema');
                else
                addKeywordFromTextbox('keywords-theme', "KeywordsTheme");

            });

            $('button#keywords-place-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-place-text').val().trim() == '')
                    alert('Vennligst fyll ut sted');
                else
                addKeywordFromTextbox('keywords-place', "KeywordsPlace");
            });
                        
            $('button#keywords-national-initiative-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-national-initiative-text').val().trim() == '')
                    alert('Vennligst velg samarbeid og lov');
                else
                addKeywordFromCodeList('keywords-national-initiative', "KeywordsNationalInitiative");
            });

            $('button#keywords-national-theme-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-national-theme-text').val().trim() == '')
                    alert('Vennligst velg DOK-kategori');
                else
                    addKeywordFromCodeList('keywords-national-theme', "KeywordsNationalTheme");
            });

            $('button#keywords-inspire-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-inspire-text').val().trim() == '')
                    alert('Vennligst velg inspire');
                else
                addKeywordFromCodeList('keywords-inspire', "KeywordsInspire");
            });

            $('button#keywords-other-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-other-text').val().trim() == '')
                    alert('Vennligst fyll ut annet');
                else
                addKeywordFromTextbox('keywords-other', "KeywordsOther");
            });

            // use a delegated event handler to bind to all existing and future delete links
            $('body').on("click", "a.keyword-delete", function (event) { 
                event.preventDefault();

                if (confirm('Er du sikker på at du vil slette nøkkelordet?')) {
                    var deleteId = $(this).data('delete');

                   var $selectCodeList = $("select#" + $(this).data('list'));
                    if ($selectCodeList !== undefined) {
                        var selector = 'option:contains("' + $(this).data('list-value') + '")';
                        var option = $selectCodeList.children(selector);
                        option.removeAttr('disabled');
                    }
                    
                    var $listItem = $('li#' + deleteId);
                    var $parentList = $listItem.parent();
                    $listItem.remove();

                    $('li', $parentList).each(function (index, value) {
                        var $hiddenItemsForRow = $('input[type=hidden]', value);
                        $hiddenItemsForRow.each(function (hiddenIndex, hiddenValue) {
                            var name = $(hiddenValue).attr("name");
                            //console.log("hidden value old name: " + name);
                            var inputName = name.substring(0, name.indexOf("["));
                            var inputNameWithIndex = inputName + '[' + index + ']';
                            //console.log("new name: " + inputNameWithIndex);
                            $(hiddenValue).attr('name', inputNameWithIndex);
                        });
                    });

                    
                }
            });

        });
    </script>
}