@model Kartverket.MetadataEditor.Models.MetadataViewModel
@using Resources


<div class="row">
    <div class="col-sm-6">
        <div class="form-group has-feedback">
            <label for="DateUpdated" class="col-sm-6 control-label">Dato sist oppdatert (dd.mm.yyyy)</label>
            <div class="col-sm-4">
                @Html.EditorFor(m => m.DateUpdated, new { cssClass = "date" })
                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-feedback">
            <label for="DatePublished" class="col-sm-6 control-label">Publiseringsdato (dd.mm.yyyy)</label>
            <div class="col-sm-4">
                @Html.EditorFor(m => m.DatePublished, new { cssClass = "date" })
                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
            </div>
        </div>

        <div class="form-group has-feedback">
            <label for="DateCreated" class="col-sm-6 control-label">Opprettet dato (dd.mm.yyyy)</label>
            <div class="col-sm-4">
                @Html.EditorFor(m => m.DateCreated, new { cssClass = "date" })
                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
            </div>
        </div>
        @if (!Model.IsSoftware()) 
        { 
        <div style="border-color: black;" class="form-group has-feedback">
            <label for="DateCreated" class="col-sm-6 control-label">Gyldig fra dato (dd.mm.yyyy)</label>
            <div class="col-sm-4">
                @Html.EditorFor(m => m.DateMetadataValidFrom, new { cssClass = "date" }) 
                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
            </div>
        </div>
        <div style="border-color: black;" class="form-group has-feedback">
            <label for="DateCreated" class="col-sm-6 control-label">Gyldig til dato (dd.mm.yyyy)</label>
            <div class="col-sm-4">
                @Html.EditorFor(m => m.DateMetadataValidTo, new { cssClass = "date" })
                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
            </div>
        </div>
        }
    </div>
    <div class="col-sm-6">
        <div class="form-group">
            <div class="col-sm-10">
                <p class="help-text bg-success" id="help-text-date" style="display: none">
                    Minst ett av datofeltene må fylles ut. Det anbefales som et minimum at "Dato sist oppdatert" benyttes.  Hvis dataene oppdateres kontinuerlig, så holder det å angi tidspunkt for etablering av datasett eller første publikasjon av datasett/tjeneste. Datoene refererer til datasett/tjeneste og ikke metadata. Tidsperiode datasettet er gyldig i er ikke obligatorisk dersom dato er fylt ut i minst et av de andre feltene.

                </p>
            </div>
            <div class="col-sm-2">
                <p class="form-control-static">
                    <a href="#" data-help-text-id="help-text-date" class="badge help-text-toggle">?</a>
                </p>
            </div>
        </div>
    </div>
</div>



<div class="form-group required has-feedback">
    <label class="col-sm-3 control-label">Oppdateringshyppighet</label>
    <div class="col-sm-4">
        <div class="form-group">
            <div class="col-sm-6">
                @Html.DropDownList("MaintenanceFrequency", ViewBag.MaintenanceFrequencyValues as SelectList, String.Empty, new { @class = "form-control" })
                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
            </div>
        </div>

    </div>
    <div class="col-sm-4">
        <p class="help-text bg-success" id="help-text-maintenancefrequency" style="display: none">
            Angivelse av intervaller for modifikasjon og andre endringer av data etter at de er etablert.
        </p>
    </div>
    <div class="col-sm-1">
        <p class="form-control-static">
            <a href="#" data-help-text-id="help-text-maintenancefrequency" class="badge help-text-toggle">?</a>
        </p>
    </div>
</div>


<div class="form-group">
    <label class="col-sm-3 control-label">Geografisk område</label>
    <div class="col-sm-4">
        <div class="form-group">
            <ul id="keywords-place">
                @for (int i = 0; i < Model.KeywordsPlace.Count; i++)
                {
                    var keyword = Model.KeywordsPlace[i];
                    <li id="keywords-place-@i">
                        <span class="">@keyword</span>
                        <a href="" class="keyword-delete" data-delete="keywords-place-@i"><small>Slett</small></a>
                        <input type="hidden" name="KeywordsPlace[@i]" value="@keyword" />
                    </li>
                }
            </ul>
        </div>

        <div class="form-group">
            <div class="col-sm-5">
                <input type="text" id="keywords-place-text" class="form-control" />
            </div>
            <div class="col-sm-2">
                <button type="button" class="btn btn-default btn-sm" id="keywords-place-add">Legg til</button>
            </div>
        </div>
    </div>
    <div class="col-sm-4">
        <p class="help-text bg-success" id="help-text-keyword-place" style="display: none">
            Det kan for eksempel være kommunenavn for kommunale datasett, eller Norges fastland for landsdekkende datasett. Skriv steder datasettet dekker i stedet for hva det ikke dekker.
        </p>
    </div>
    <div class="col-sm-1">
        <p class="form-control-static">
            <a href="#" data-help-text-id="help-text-keyword-place" class="badge help-text-toggle">?</a>
        </p>
    </div>
</div>



<div class="panel panel-default">
    <div class="panel-heading required">Geografisk utstrekning<div class="pull-right"><a href="#" data-help-text-id="help-text-BoundingBox" class="badge help-text-toggle">?</a></div></div>
    <p class="help-text bg-success" id="help-text-BoundingBox" style="display: none">@UI.Helptext_BoundingBox</p>
    <div class="panel-group">
        <div class="panel-heading bg-info">Angi avgrensningsområde:</div>
        <div class="panel-body">
            <div class="row">
                <div class="form-group col-sm-6 required has-feedback">
                    <label class="col-sm-2 col-sm-offset-4 control-label">Nord</label>
                    <div class="col-sm-4">
                        @Html.EditorFor(m => m.BoundingBoxNorth)
                        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                    </div>
                </div>
                <div class="form-group col-sm-6 required has-feedback">
                    <label class="col-sm-2 control-label">Øst</label>
                    <div class="col-sm-4">
                        @Html.EditorFor(m => m.BoundingBoxEast)
                        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group col-sm-6 required has-feedback">
                    <label class="col-sm-2 col-sm-offset-4 control-label">Sør</label>
                    <div class="col-sm-4">
                        @Html.EditorFor(m => m.BoundingBoxSouth)
                        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                    </div>
                </div>
                <div class="form-group col-sm-6 required has-feedback">
                    <label class="col-sm-2 control-label">Vest</label>
                    <div class="col-sm-4">
                        @Html.EditorFor(m => m.BoundingBoxWest)
                        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label for="state" class="control-label col-sm-3">Velg fast område:</label>
                <div class="col-sm-2">
                    <select name="state" id="bboxState" class="form-control">
                        <option data-statenumber="00">Hele landet</option>
                        <option data-statenumber="02">Akershus</option>
                        <option data-statenumber="09">Aust-Agder</option>
                        <option data-statenumber="06">Buskerud</option>
                        <option data-statenumber="20">Finnmark</option>
                        <option data-statenumber="04">Hedmark</option>
                        <option data-statenumber="12">Hordaland</option>
                        <option data-statenumber="15">Møre og Romsdal</option>
                        <option data-statenumber="17">Nord-Trøndelag</option>
                        <option data-statenumber="18">Nordland</option>
                        <option data-statenumber="05">Oppland</option>
                        <option data-statenumber="21">Oslo</option>
                        <option data-statenumber="11">Rogaland</option>
                        <option data-statenumber="14">Sogn og Fjordane</option>
                        <option data-statenumber="16">Sør-Trøndelag</option>
                        <option data-statenumber="08">Telemark</option>
                        <option data-statenumber="19">Troms</option>
                        <option data-statenumber="10">Vest-Agder</option>
                        <option data-statenumber="07">Vestfold</option>
                        <option data-statenumber="01">Østfold</option>
                    </select>
                </div>
                <label for="county" class="control-label col-sm-1">Delområde:</label>
                <div class="col-sm-3">
                    <select name="county" id="bboxCounty" class="form-control">
                        <option data-countynumber="00" data-north="72" data-south="57" data-east="33" data-west="2">Hele landet</option>
                        @Html.Partial("_OptionsCountyList")
                    </select>
                </div>
                <div class="col-sm-2">
                    <button class="btn btn-default" id="bboxPrefill">Bruk</button>
                </div>
            </div>
            <div class="form-group">
                <div class="row">
                    <div class="col-sm-3 col-sm-offset-1">
                        <label for="state" class="control-label">Eller angi området i kartet:</label>
                    </div>
                    <div class="col-sm-2">
                        <a href="#" role="button" data-toggle="modal" id="norgeskartLink" data-target="#norgeskart" class="btn btn-sm btn-default"><span class="glyphicon glyphicon-globe"></span> Angi i kartet</a>
                    </div>
                    <div class="col-sm-1">
                        <div id="norgeskart" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="norgeskart" aria-hidden="true">
                            @Html.Partial("_Norgeskart", Model)
                        </div>
                    </div>
                    <div class="col-sm-8"></div>
                    </div>
            </div>
        </div>
    </div>
        @{bool coverageImageFound = false;}
        @if (Model.IsDataset() || Model.IsDatasetSeries())
        {
            <div class="panel-group">
                <div class="panel-heading bg-info">Angi dekningskart:</div>
                <div class="panel-body">
                    <div class="row">
                        <div class="form-group">
                            <label class="col-sm-2 control-label">Velg type dekningskart:</label>
                            <div class="col-sm-9">
                                <select id="coverageType" name="coverageType" class="form-control" onchange="showCoverageType(this.value);">
                                    <option value="webpage">Webside</option>
                                    <option value="mapservice">Karttjenestelag</option>
                                    <option value="imageCoverage">Bildefil</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group" id="coverageWebsite">
                            <label class="col-sm-2 control-label"></label>
                            <div class="col-sm-9">
                                <label class="control-label" for="CoverageUrl">Webside:</label>
                                @Html.EditorFor(m => m.CoverageUrl, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="form-group" id="coverageServiceMap">
                            <label class="col-sm-2 control-label"></label>
                            <div class="col-sm-9">

                                <label class="control-label" for="coveragePath">Url til tjeneste:</label><input class="form-control" type="text" id="coveragePath" name="coveragePath" onchange="setCoverage()" />
                                <input type="radio" value="WMS" id="WMSid" name="coverageMapType" onchange="setCoverage()" class="coverageMapTypes" />WMS
                                <input type="radio" value="WFS" id="WFSid" name="coverageMapType" onchange="setCoverage()" class="coverageMapTypes" />WFS
                                <input type="radio" value="GeoJSON" id="GeoJSONid" name="coverageMapType" onchange="setCoverage()" class="coverageMapTypes" />GeoJSON
                                <br />
                                <label class="control-label" for="coverageLayer">Navn på kartlag:</label><input class="form-control" type="text" id="coverageLayer" name="coverageLayer" onchange="setCoverage()" />

                            </div>
                        </div>
                        <div class="form-group" id="imageCoverage">
                            <label class="col-sm-2 control-label"></label>
                            <div class="col-sm-9">

                                <div class="form-group">
                                    <label class="col-sm-2 control-label">Angi bildefil</label>
                                    <div class="col-sm-8">
                                        <div class="form-group" id="uploadCoverage">
                                            <div class="col-sm-7">
                                                <input type="file" id="uploadCoverageFile" class="filestyle" data-buttontext="Velg fil" onchange="document.getElementById('uploadMode').value = 'upload';" />
                                            </div>
                                            <div class="col-sm-3 hidden">
                                                <label class="control-label"><input type="checkbox" id="uploadScaleCoverage" name="scaleImage" /> Skalering til miniatyrbilde</label>
                                            </div>
                                            <div class="col-sm-2">
                                                <button class="btn btn-default" type="submit" id="uploadCoverageButton" onclick="return checkIfUrlReference();">Bruk</button>
                                            </div>
                                        </div>
                                        <div id="uploadCoverageStatus"></div>
                                    </div>
                                </div>


                                <div class="form-group" style="display: none; visibility: hidden;">
                                    <label class="col-sm-2 control-label">Eller angi URL</label>
                                    <div class="col-sm-5">
                                        <input id="coverageUri" onfocus="document.getElementById('uploadMode').value = 'reference';" type="text" class="form-control" />
                                    </div>
                                    <div class="col-sm-3">
                                    </div>
                                    <div class="col-sm-1">
                                        <button class="btn btn-default" style="display: none; visibility:hidden;" id="coverageAdd"></button>
                                        
                                        <script>
                                            function checkIfUrlReference() {
                                                if (document.getElementById('coverageUri').value != '' && document.getElementById('uploadMode').value == 'reference') {
                                                    document.getElementById('coverageAdd').click();
                                                    return false;
                                                }
                                            }
                                        </script>

                                    </div>
                                </div>
                                <div class="form-group">
                                    <ul id="thumbnailsCoverage">
                                    @for (int i = 0; i < Model.Thumbnails.Count; i++)
                                    {
                                    var thumbnail = Model.Thumbnails[i];
                                    if (thumbnail.Type == "dekningsoversikt")
                                        {
                                        coverageImageFound = true;
                                        <li class="thumbnail clearfix">
                                            <input type="hidden" id="coverageImageSelectedType" name="Thumbnails[@i].Type" value="@thumbnail.Type" />
                                            <input type="hidden" id="coverageImageSelectedURL" name="Thumbnails[@i].URL" value="@thumbnail.URL" />
                                            <img id="coverageImageSelected" src="@thumbnail.URL" width="200" class="pull-left" style="margin-right: 10px;" />
                                            <p><strong>Valgt dekningskart:</strong></p>
                                            <p><strong>URL:</strong> <span id="coverageImageNameSelected"><small>@thumbnail.URL</small></span></p>
                                        </li>
                                        break;
                                        }
                                    }    
                                    </ul>

                                </div>
                            </div>
                        </div>
                    </div>
                    </div>
                </div>
                    }
                    @if (Model.IsDataset() || Model.IsDatasetSeries())
                    {
                        <script>
    function showCoverageType(coverageT) {

        //if (coverageT == 'mapservice' || coverageT == 'webpage') {
        //    if (!document.getElementById('coverageImageSelectedURL')) {
        //        document.getElementById('coverageImageSelectedURL').removeNode();
        //        document.getElementById('coverageImageSelectedType').removeNode();
        //    }
        //}

        if (coverageT == 'mapservice') {
            document.getElementById('coverageWebsite').style.display = "none";
            document.getElementById('coverageWebsite').style.visibility = "hidden";
            document.getElementById('imageCoverage').style.display = "none";
            document.getElementById('imageCoverage').style.visibility = "hidden";
            document.getElementById('coverageServiceMap').style.display = "block";
            document.getElementById('coverageServiceMap').style.visibility = "visible";

        }

        else if (coverageT == 'webpage') {
            document.getElementById('coverageWebsite').style.display = "block";
            document.getElementById('coverageWebsite').style.visibility = "visible";
            document.getElementById('coverageServiceMap').style.display = "none";
            document.getElementById('coverageServiceMap').style.visibility = "hidden";
            document.getElementById('imageCoverage').style.display = "none";
            document.getElementById('imageCoverage').style.visibility = "hidden";
        }

        else {
            document.getElementById('coverageWebsite').style.display = "none";
            document.getElementById('coverageWebsite').style.visibility = "hidden";
            document.getElementById('coverageServiceMap').style.display = "none";
            document.getElementById('coverageServiceMap').style.visibility = "hidden";
            document.getElementById('imageCoverage').style.display = "block";
            document.getElementById('imageCoverage').style.visibility = "visible";
        }
    }

    function setCoverage() {


        var coverageMapType = document.querySelector('.coverageMapTypes:checked').value;
        var coveragePath = document.getElementById('coveragePath').value;
        var coverageLayer = document.getElementById('coverageLayer').value;
        document.getElementById('CoverageUrl').value = 'TYPE:' + coverageMapType + '@@PATH:' + coveragePath + '@@LAYER:' + coverageLayer;


    }

    function getCoverage() {
        var coverageStr = '@Model.CoverageUrl';
        var endPosType = coverageStr.search('@@PATH');
        var typeStr = coverageStr.substring(5, endPosType);
        if (typeStr == 'WMS')
            document.getElementById("WMSid").checked = true;
        else if (typeStr == 'WFS')
            document.getElementById("WFSid").checked = true;
        else if (typeStr == 'GeoJSON')
            document.getElementById("GeoJSONid").checked = true;


        var endPath = coverageStr.search('@@LAYER');
        var pathStr = coverageStr.substring(endPosType + 6, endPath);
        document.getElementById('coveragePath').value = pathStr;

        var startLayer = endPath + 7;
        var endLayer = coverageStr.length - startLayer;
        var layerStr = coverageStr.substr(startLayer, endLayer);
        document.getElementById('coverageLayer').value = layerStr;

    }

    @if (!string.IsNullOrEmpty(Model.CoverageUrl) && Model.CoverageUrl.IndexOf("TYPE:") > -1)
                            {
                                @: showCoverageType('mapservice')
                                        @: document.getElementById('coverageType').options[1].selected = true;
                                        @: getCoverage();
                                    }
                            else if(coverageImageFound)
                            {
                                        @: document.getElementById('coverageType').options[2].selected = true;
                                     @: showCoverageType('imageCoverage')
                                }
                            else
                            {
                                @: showCoverageType('webpage')
                                    }


                        </script>
                    }

                </div>