@model Kartverket.MetadataEditor.Models.MetadataViewModel
@using Resources

<div id="norgeskart" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="norgeskart" aria-hidden="true">
    @Html.Partial("_Norgeskart", Model)
</div>

<div class="col-md-6">
    <div class="row">
        <div class="form-group has-feedback">
            <label for="DateUpdated" class="col-md-6 control-label">Dato sist oppdatert (dd.mm.yyyy)</label>
            <div class="col-md-6">
                @Html.EditorFor(m => m.DateUpdated, new { cssClass = "date" })
                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
            </div>
        </div>
        <div class="form-group has-feedback">
            <label for="DatePublished" class="col-md-6 control-label">Publiseringsdato (dd.mm.yyyy)</label>
            <div class="col-md-6">
                @Html.EditorFor(m => m.DatePublished, new { cssClass = "date" })
                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
            </div>
        </div>
        <div class="form-group has-feedback">
            <label for="DateCreated" class="col-md-6 control-label">Opprettet dato (dd.mm.yyyy)</label>
            <div class="col-md-6">
                @Html.EditorFor(m => m.DateCreated, new { cssClass = "date" })
                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
            </div>
        </div>
        @if (!Model.IsSoftware())
        {
            <div class="form-group has-feedback">
                <label for="DateCreated" class="col-md-6 control-label">Gyldig fra dato (dd.mm.yyyy)</label>
                <div class="col-md-6">
                    @Html.EditorFor(m => m.DateMetadataValidFrom, new { cssClass = "date" })
                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                </div>
            </div>
            <div class="form-group has-feedback">
                <label for="DateCreated" class="col-md-6 control-label">Gyldig til dato (dd.mm.yyyy)</label>
                <div class="col-md-6">
                    @Html.EditorFor(m => m.DateMetadataValidTo, new { cssClass = "date" })
                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                </div>
            </div>
        }
    </div>
</div>
<div class="col-md-6">
    <div class="row">
        <div class="col-md-10">
            <p class="help-text bg-success" id="help-text-date" style="display: none">
                Minst ett av datofeltene må fylles ut. Det anbefales som et minimum at "Dato sist oppdatert" benyttes.  Hvis dataene oppdateres kontinuerlig, så holder det å angi tidspunkt for etablering av datasett/tjeneste ("Opprettet dato") eller første publikasjon av datasett/tjeneste ("Publiseringsdato"). Datoene refererer til datasett/tjeneste og ikke metadata. Tidsperiode ("Gyldig fra dato" og "Gyldig til dato") datasettet er gyldig i er ikke obligatorisk dersom dato er fylt ut i minst et av de andre feltene.

            </p>
        </div>
        <div class="col-md-2">
            <p class="form-control-static">
                <a href="#" data-help-text-id="help-text-date" class="badge help-text-toggle">?</a>
            </p>
        </div>
    </div>
</div>
<div class="clearfix"></div>

<div class="form-group required has-feedback">
    <label class="col-md-3 control-label">Oppdateringshyppighet</label>


    <div class="col-md-8">
        <p class="help-text bg-success" id="help-text-maintenancefrequency" style="display: none">
            Angivelse av intervaller for modifikasjon og andre endringer av data etter at de er etablert.
        </p>
        <div class="custom-select">
            @Html.DropDownList("MaintenanceFrequency", ViewBag.MaintenanceFrequencyValues as SelectList, String.Empty, new { @class = "form-control" })
        </div>
        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
    </div>


    <div class="col-md-1">
        <p class="form-control-static">
            <a href="#" data-help-text-id="help-text-maintenancefrequency" class="badge help-text-toggle">?</a>
        </p>
    </div>
</div>

<div class="form-group">
    <label class="col-md-3 control-label">Nøkkelord for geografisk område</label>
    <div class="col-md-8">
        <p class="help-text bg-success" id="help-text-keyword-place" style="display: none">
            Det kan for eksempel være kommunenavn for kommunale datasett, eller Norges fastland for landsdekkende datasett. Skriv steder datasettet dekker i stedet for hva det ikke dekker.
        </p>
        <div class="row">
            <div class="col-md-6">
                <div class="input-group">
                    <input type="text" id="keywords-place-text" class="" />
                    <span class="input-group-btn">
                        <button type="button" class="btn" id="keywords-place-add">Legg til</button>
                    </span>
                </div>
            </div>
            <div class="col-md-6">
                <ul id="keywords-place" class="label-list">
                    @for (int i = 0; i < Model.KeywordsPlace.Count; i++)
                    {
                        var keyword = Model.KeywordsPlace[i];
                        <li id="keywords-place-@i">
                            <span class="">@keyword</span>
                            <a href="" class="keyword-delete label-list-remove" data-delete="keywords-place-@i"></a>
                            <input type="hidden" name="KeywordsPlace[@i]" value="@keyword" />
                        </li>
                    }
                </ul>
            </div>
        </div>
    </div>
    <div class="col-md-1">
        <p class="form-control-static">
            <a href="#" data-help-text-id="help-text-keyword-place" class="badge help-text-toggle">?</a>
        </p>
    </div>
</div>

<div class="hidden">
    <div class="col-md-6">
        <div class="custom-select input-group">
            <span class="input-group-addon">Delområde:</span>
            <select name="county" id="bboxCounty" class="form-control">
                <option data-countynumber="00" data-north="72" data-south="57" data-east="33" data-west="2">Hele landet</option>
                @Html.Partial("_OptionsCountyList")
            </select>
        </div>
    </div>
    <div class="col-md-2">
        <button class="btn btn-default hidden" id="bboxPrefill">Angi</button>
    </div>
    <ul id="place-list"></ul>
</div>


<div class="panel panel-default">
    <div class="panel-heading">
        <div class="row">
            <div class="col-md-11">Geografisk utstrekning</div>
            <div class="col-md-1">
                <a href="#" data-help-text-id="help-text-BoundingBox" class="badge help-text-toggle">?</a>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
    <div class="panel-body">
        <p class="help-text bg-success" id="help-text-BoundingBox" style="display: none">@UI.Helptext_BoundingBox</p>
        <div class="form-group">
            <label class="col-md-2 control-label">Angi område</label>
            <div class="col-md-4">
                <div class="input-group chosen-input-group">
                    <select name="state" id="bboxState" multiple="multiple" class="chosen-select form-control" data-placeholder="Velg område">
                        <option></option>
                        <option data-statenumber="00" data-north="72" data-south="57" data-east="33" data-west="2">Hele landet</option>
                        <optgroup label="Akershus" data-statenumber="02"></optgroup>
                        <optgroup label="Aust-Agder" data-statenumber="09"></optgroup>
                        <optgroup label="Buskerud" data-statenumber="06"></optgroup>
                        <optgroup label="Finnmark" data-statenumber="20"></optgroup>
                        <optgroup label="Hedmark" data-statenumber="04"></optgroup>
                        <optgroup label="Hordaland" data-statenumber="12"></optgroup>
                        <optgroup label="Møre og Romsdal" data-statenumber="15"></optgroup>
                        <optgroup label="Nord-Trøndelag" data-statenumber="17"></optgroup>
                        <optgroup label="Nordland" data-statenumber="18"></optgroup>
                        <optgroup label="Oppland" data-statenumber="05"></optgroup>
                        <optgroup label="Oslo" data-statenumber="21"></optgroup>
                        <optgroup label="Rogaland" data-statenumber="11"></optgroup>
                        <optgroup label="Sogn og Fjordane" data-statenumber="14"></optgroup>
                        <optgroup label="Sør-Trøndelag" data-statenumber="16"></optgroup>
                        <optgroup label="Telemark" data-statenumber="08"></optgroup>
                        <optgroup label="Troms" data-statenumber="19"></optgroup>
                        <optgroup label="Vest-Agder" data-statenumber="10"></optgroup>
                        <optgroup label="Vestfold" data-statenumber="07"></optgroup>
                        <optgroup label="Østfold" data-statenumber="01"></optgroup>
                    </select>
                    <span class="input-group-btn" data-toggle="modal" data-target="#norgeskart">
                        <button onclick="event.preventDefault();" id="norgeskartLink" class="btn btn-fullheight"><span class="glyphicon glyphicon-globe"></span></button>
                    </span>
                </div>
            </div>
            <label class="col-md-2 control-label">Eller angi koordinater</label>
            <div class="col-md-3">
                <div class="form-group has-feedback no-margin-bottom no-padding-bottom">
                    <div class="input-group">
                        <span class="input-group-addon">Nord</span>
                        @Html.EditorFor(m => m.BoundingBoxNorth)
                        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                    </div>
                </div>
                <div class="form-group has-feedback no-margin-bottom no-padding-bottom">
                    <div class="input-group">
                        <span class="input-group-addon">Øst</span>
                        @Html.EditorFor(m => m.BoundingBoxEast)
                        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                    </div>
                </div>
                <div class="form-group has-feedback no-margin-bottom no-padding-bottom">
                    <div class="input-group">
                        <span class="input-group-addon">Sør</span>
                        @Html.EditorFor(m => m.BoundingBoxSouth)
                        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                    </div>
                </div>
                <div class="form-group has-feedback no-margin-bottom no-padding-bottom">
                    <div class="input-group">
                        <span class="input-group-addon">Vest</span>
                        @Html.EditorFor(m => m.BoundingBoxWest)
                        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>
@{bool coverageImageFound = false;}
@if (Model.IsDataset() || Model.IsDatasetSeries())
{
    <div class="panel panel-default">
        <div class="panel-heading">
            Angi dekningskart
        </div>
        <div class="panel-body">
            <div class="form-group">
                <label class="col-md-2 control-label">Type dekningskart:</label>
                <div class="col-md-3">
                    <div class="custom-select">
                        <select id="coverageType" name="coverageType" class="form-control" onchange="showCoverageType(this.value);">
                            <option value="webpage">Webside</option>
                            <option value="mapservice">Karttjenestelag</option>
                            <option value="imageCoverage">Bildefil</option>
                        </select>
                    </div>
                </div>
            </div>
            <div id="coverageWebsite">
                <div class="form-group">
                    <label class="col-md-2 control-label" for="CoverageUrl">Webside:</label>
                    <div class="col-md-5">
                        @Html.EditorFor(m => m.CoverageUrl, new { htmlAttributes = new { @class = "form-control" } })
                    </div>
                </div>
            </div>
            <div id="coverageServiceMap">
                <div class="form-group">
                    <label class="col-md-2 control-label" for="coveragePath">Tjenestetype</label>
                    <div class="col-md-6">
                        <div class="radio">
                            <label><input type="radio" value="WMS" id="WMSid" name="coverageMapType" onchange="setCoverage()" class="coverageMapTypes" /> WMS</label>
                        </div>
                        <div class="radio">
                            <label><input type="radio" value="WFS" id="WFSid" name="coverageMapType" onchange="setCoverage()" class="coverageMapTypes" /> WFS</label>
                        </div>
                        <div class="radio">
                            <label><input type="radio" value="GeoJSON" id="GeoJSONid" name="coverageMapType" onchange="setCoverage()" class="coverageMapTypes" /> GeoJSON</label>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label" for="coveragePath">TjenesteURL</label>
                    <div class="col-md-9">
                        <input class="form-control" type="text" id="coveragePath" name="coveragePath" onchange="setCoverage()" />
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-md-2 control-label" for="coverageLayer">Kartlagsnavn</label>
                    <div class="col-md-9">
                        <input class="form-control" type="text" id="coverageLayer" name="coverageLayer" onchange="setCoverage()" />
                    </div>
                    <div class="col-md-6"></div>
                </div>
            </div>
            <div class="form-group" id="imageCoverage">
                <label class="col-md-2 control-label">Angi bildefil</label>
                <div class="col-md-4">
                    <input type="file" id="uploadCoverageFile" class="filestyle" data-buttontext="Velg fil" onchange="document.getElementById('uploadMode').value = 'upload';" />
                </div>
                <div class="col-md-2">

                    <button class="btn btn-default" type="submit" id="uploadCoverageButton" onclick="return checkIfUrlReference();">Last opp</button>





                </div>
                <div class="col-md-3 hidden">
                    <label class="control-label"><input type="checkbox" id="uploadScaleCoverage" name="scaleImage" /> Skalering til miniatyrbilde</label>
                </div>
                <div id="uploadCoverageStatus"></div>
            </div>
            <div class="hidden">
                <label class="col-md-2 control-label">Eller angi URL</label>
                <div class="col-md-5">
                    <input id="coverageUri" onfocus="document.getElementById('uploadMode').value = 'reference';" type="text" class="form-control" />
                </div>
                <div class="col-md-3">
                </div>
                <div class="col-md-1">
                    <button class="btn btn-default" style="display: none; visibility:hidden;" id="coverageAdd"></button>
                    <script>
                        function checkIfUrlReference() {
                            if (document.getElementById('coverageUri').value != '' && document.getElementById('uploadMode').value == 'reference') {
                                document.getElementById('coverageAdd').click();
                                return false;
                            }
                        }
                    </script>
                </div>
            </div>
            <div class="form-group">
                <ul id="thumbnailsCoverage">
                    @for (int i = 0; i < Model.Thumbnails.Count; i++)
                {
                    var thumbnail = Model.Thumbnails[i];
                    if (thumbnail.Type == "dekningsoversikt")
                    {
                        coverageImageFound = true;
                            <li class="thumbnail clearfix">
                                <input type="hidden" id="coverageImageSelectedType" name="Thumbnails[0].Type" value="@thumbnail.Type" />
                                <input type="hidden" id="coverageImageSelectedURL" name="Thumbnails[0].URL" value="@thumbnail.URL" />
                                <img id="coverageImageSelected" src="@thumbnail.URL" width="200" class="pull-left" style="margin-right: 10px;" />
                                <p><strong>Valgt dekningskart:</strong></p>
                                <p><strong>URL:</strong> <span id="coverageImageNameSelected"><small>@thumbnail.URL</small></span></p>
                            </li>
                            break;
                        }
                    }
                </ul>

            </div>

        </div>
    </div>



}
@if (Model.IsDataset() || Model.IsDatasetSeries())
{
    <script>
        function showCoverageType(coverageT) {

            //if (coverageT == 'mapservice' || coverageT == 'webpage') {
            //    if (!document.getElementById('coverageImageSelectedURL')) {
            //        document.getElementById('coverageImageSelectedURL').removeNode();
            //        document.getElementById('coverageImageSelectedType').removeNode();
            //    }
            //}

            if (coverageT == 'mapservice') {
                document.getElementById('coverageWebsite').style.display = "none";
                document.getElementById('coverageWebsite').style.visibility = "hidden";
                document.getElementById('imageCoverage').style.display = "none";
                document.getElementById('imageCoverage').style.visibility = "hidden";
                document.getElementById('coverageServiceMap').style.display = "block";
                document.getElementById('coverageServiceMap').style.visibility = "visible";

            }

            else if (coverageT == 'webpage') {
                document.getElementById('coverageWebsite').style.display = "block";
                document.getElementById('coverageWebsite').style.visibility = "visible";
                document.getElementById('coverageServiceMap').style.display = "none";
                document.getElementById('coverageServiceMap').style.visibility = "hidden";
                document.getElementById('imageCoverage').style.display = "none";
                document.getElementById('imageCoverage').style.visibility = "hidden";
            }

            else {
                document.getElementById('coverageWebsite').style.display = "none";
                document.getElementById('coverageWebsite').style.visibility = "hidden";
                document.getElementById('coverageServiceMap').style.display = "none";
                document.getElementById('coverageServiceMap').style.visibility = "hidden";
                document.getElementById('imageCoverage').style.display = "block";
                document.getElementById('imageCoverage').style.visibility = "visible";
            }
        }

        function setCoverage() {


            var coverageMapType = document.querySelector('.coverageMapTypes:checked').value;
            var coveragePath = document.getElementById('coveragePath').value;
            var coverageLayer = document.getElementById('coverageLayer').value;
            document.getElementById('CoverageUrl').value = 'TYPE:' + coverageMapType + '@@PATH:' + coveragePath + '@@LAYER:' + coverageLayer;


        }

        function getCoverage() {
            var coverageStr = '@Model.CoverageUrl';
            var endPosType = coverageStr.search('@@PATH');
            var typeStr = coverageStr.substring(5, endPosType);
            if (typeStr == 'WMS')
                document.getElementById("WMSid").checked = true;
            else if (typeStr == 'WFS')
                document.getElementById("WFSid").checked = true;
            else if (typeStr == 'GeoJSON')
                document.getElementById("GeoJSONid").checked = true;


            var endPath = coverageStr.search('@@LAYER');
            var pathStr = coverageStr.substring(endPosType + 6, endPath);
            document.getElementById('coveragePath').value = pathStr;

            var startLayer = endPath + 7;
            var endLayer = coverageStr.length - startLayer;
            var layerStr = coverageStr.substr(startLayer, endLayer);
            document.getElementById('coverageLayer').value = layerStr;

        }

        @if (!string.IsNullOrEmpty(Model.CoverageUrl) && Model.CoverageUrl.IndexOf("TYPE:") > -1)
                            {
                                @: showCoverageType('mapservice')
                                                                                                                                                                                                                                                                                                                        @: document.getElementById('coverageType').options[1].selected = true;
                                                                                                                                                                                                                                                                                                                        @: getCoverage();
                                                                                                                                                                                                                                                                                                                    }
                            else if(coverageImageFound)
                            {
                                @: document.getElementById('coverageType').options[2].selected = true;
                                                                                                                                                                                                                                                                                                                        @: showCoverageType('imageCoverage')
                                                                                                                                                                                                                                                                                                                    }
                            else
                            {
                                @: showCoverageType('webpage')
                                                                                                                                                                                                                                                                                                                    }
    </script>
}
