@using Resources;
@model Kartverket.MetadataEditor.Models.MetadataViewModel
@{string classFormat = "form-control"; }

@if (Model.IsDataset() || Model.IsDatasetSeries())
{
    <div class="form-group">
        <label for="SpatialRepresentation" class="col-md-3 control-label">Representasjonsform</label>
        <div class="col-md-3">
            <div class="custom-select">
                @Html.DropDownList("SpatialRepresentation", ViewBag.SpatialRepresentationValues as SelectList, String.Empty, new { @class = "form-control", onclick = "updateDistributionFormatOptionElements()" })
            </div>
        </div>
    </div>
}
@{int index = 0; int indexDistribution = 0; int indexFirstDistributionElement = 0; }
@if (Model.FormatDistributions != null)
{
    foreach (var distr in Model.FormatDistributions)
    {
        var distribution = distr.Value;
        indexFirstDistributionElement = index;
        <div class="panel panel-default distribution-row">
            <div class="panel-heading">
                <div class="row">
                    <div class="col-md-11">
                        <span class="required">Distribusjon</span>
                    </div>
                    <div class="col-md-1">

                    </div>
                    <div class="clearfix"></div>
                </div>
            </div>
            <div class="panel-body">
                @if (Model.IsDataset() || Model.IsDatasetSeries())
                {
                    <div class="form-group required has-feedback">
                        <div class="row">
                            <label for="abstract" class="col-md-3 control-label">Organisasjon</label>
                            <div class="col-md-6">
                                <div class="custom-select">
                                    <select class="distribution-organization form-control" id="DistributionsFormats[@index].Organization" name="DistributionsFormats[@index].Organization" onchange="setOrganizationHiddenFieldElements(event, value)">
                                        <option value="">Velg</option>
                                        @{string selectedOrganization = distribution.Details.Organization;
                                            if (string.IsNullOrEmpty(selectedOrganization))
                                            {
                                                if (Model.ContactPublisher != null && !string.IsNullOrEmpty(Model.ContactPublisher.Organization))
                                                { selectedOrganization = Model.ContactPublisher.Organization; }

                                            }

                                        }
                                        @foreach (SelectListItem option in ViewBag.OrganizationDistributorValues)
                                        {
                                            <option value="@option.Value" @(option.Value == selectedOrganization ? "selected='selected'" : "")>@option.Text</option>

                                        }
                                    </select>
                                </div>
                                <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                            </div>
                        </div>
                    </div>
                                            }
                <div class="form-group required has-feedback">
                    <div class="row">
                        <label class="col-md-3 control-label" for="DistributionsFormats[@index].Protocol">Distribusjonstype</label>
                        <div class="col-md-6">
                            <p class="help-text bg-success" id="help-text-DistributionProtocol" style="display: none">
                                Velg riktig distribusjonsform for ressursen (datasette/tjenesten/websiden)
                            </p>
                            <div class="custom-select">
                                <select class="distribution-protocol form-control" id="DistributionsFormats[@index].Protocol" name="DistributionsFormats[@index].Protocol" onchange="setProtocolHiddenFieldElements(event, value)">
                                    <option value="">Klikk for å velge</option>
                                    @foreach (SelectListItem option in ViewBag.predefinedDistributionProtocols)
                                    {
                                        <option value="@option.Value" @(option.Value == distribution.Details.Protocol ? "selected='selected'" : "")>@option.Text</option>

                                    }
                                </select>
                            </div>
                            <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                        </div>
                        <div class="col-md-1 col-md-offset-2">
                            <p class="form-control-static">
                                <a href="#" data-help-text-id="help-text-DistributionProtocol" class="badge help-text-toggle">?</a>
                            </p>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <div class="row">
                        <label for="DistributionsFormats[@index].URL" class="col-md-3 control-label">URL</label>
                        <div class="col-md-8">
                            <p class="help-text bg-success" id="help-text-DistributionUrl" style="display: none">
                                Fyll inn adresse til nedlastningsside/webside eller tjeneste. For tjenester skal URL angis med lenke til GetCapabilities (service og request på fylles ut).
                            </p>
                            <input class="distribution-url form-control" id="DistributionsFormats[@index].URL" name="DistributionsFormats[@index].URL" type="text" value="@distribution.Details.URL" onkeyup="updateUrlHiddenFieldElements(event, value)">
                        </div>
                        <div class="col-md-1">
                            <p class="form-control-static">
                                <a href="#" data-help-text-id="help-text-DistributionUrl" class="badge help-text-toggle">?</a>
                            </p>
                        </div>
                    </div>
                </div>

                @{
                    if (ViewContext.ViewData.ModelState.ContainsKey("DistributionFormats"))
                    {
                        classFormat = "input-validation-error form-control";
                    }
                }
                <hr />
                <div class="distribution-formats">
                    <div id="distribution-format-rows" class="distribution-format-rows">
                        @{ string modelDatatype = "service"; }
                        @if (distribution != null && distribution.Formats != null)
                    {
                        for (int indexFormat = 0; indexFormat < distribution.Formats.Count; indexFormat++)
                        {
                            string rowID = "formatRow" + indexDistribution + "_" + indexFormat;
                                <div class="distribution-format-row">
                                    <div class="form-group @(Model.IsSoftware() ? "" : "required has-feedback")">
                                        <div class="row">
                                            <label for="DistributionsFormats[@index].FormatName" class="col-md-3 control-label">Format</label>
                                            <input type="hidden" name="DistributionsFormats.Index" value="@index" />

                                            <div class="col-md-8">
                                                @if (indexFormat == 0)
                                                {
                                                    <p class="help-text bg-success" id="help-text-DistributionFormat" style="display: none">
                                                        Flere format kan angis. Versjon av formatet som leveres via filer eller tjenester, for eksempel gml 3.2.1.
                                                    </p>
                                                }
                                                <div class="row">
                                                    <div class="col-md-4">
                                                        @if (Model.IsDataset() || Model.IsDatasetSeries())
                                                        {
                                                            modelDatatype = "dataset";
                                                            <div class="custom-select">
                                                                <select class="distributionFormats-formatName form-control" id="DistributionsFormats[@index].FormatName" name="DistributionsFormats[@index].FormatName" onclick="checkForSpatialRepresentation();">
                                                                    @if (!string.IsNullOrEmpty(distribution.Formats[indexFormat].Name))
                                                                    {
                                                                        <option value="@distribution.Formats[indexFormat].Name">@distribution.Formats[indexFormat].Name</option>
                                                                    }
                                                                    else
                                                                    {
                                                                        <option value="" disabled selected>Klikk for å velge</option>
                                                                    }
                                                                </select>
                                                            </div>
                                                            <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                                                        }
                                                        else
                                                        {
                                                            <input id="DistributionsFormats[@index].FormatName" name="DistributionsFormats[@index].FormatName" type="text" value="@distribution.Formats[indexFormat].Name" class="@classFormat" />
                                                            <span class="@(Model.IsSoftware() ? "" :"glyphicon glyphicon-warning-sign form-control-feedback")"></span>
                                                        }
                                                    </div>
                                                    <label class="col-md-2 control-label" for="DistributionsFormats[@index].FormatVersion">Versjon</label>
                                                    <div class="col-md-3">
                                                        <input type="text" id="DistributionsFormats[@index].FormatVersion" name="DistributionsFormats[@index].FormatVersion" value="@distribution.Formats[indexFormat].Version" />
                                                    </div>
                                                    <div class="col-md-3">
                                                        <span class="btn" onclick="removeDistributionFormat(event)">Slett</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="col-md-1">
                                                @if (indexFormat == 0)
                                                {
                                                    <span class="form-control-static">
                                                        <a href="#" data-help-text-id="help-text-DistributionFormat" class="badge help-text-toggle">?</a>
                                                    </span>
                                                }
                                            </div>
                                        </div>
                                        @* Hidden fields *@
                                        <input type="hidden" id="DistributionsFormats[@index].Protocol" name="DistributionsFormats[@index].Protocol" value="@distribution.Details.Protocol" />
                                        <input type="hidden" class="distributionFormats-name" id="DistributionsFormats[@index].Name" name="DistributionsFormats[@index].Name" value="@distribution.Details.Name" />
                                        <input type="hidden" class="distributionFormats-url" id="DistributionsFormats[@index].URL" name="DistributionsFormats[@index].URL" value="@distribution.Details.URL" />
                                        <input type="hidden" class="distributionFormats-unitsOfDistribution" id="DistributionsFormats[@index].UnitsOfDistribution" name="DistributionsFormats[@index].UnitsOfDistribution" value="@distribution.Details.UnitsOfDistribution" />
                                        <input type="hidden" class="distributionFormats-organization" id="DistributionsFormats[@index].Organization" name="DistributionsFormats[@index].Organization" value="@distribution.Details.Organization" />
                                    </div>
                                </div>
                            }
                        }
                    </div>
                    <div class="text-right">
                        <span class="btn btn-default" onclick="addDistributionFormat(event);">Nytt format</span>
                    </div>
                </div>
                <hr style="border-bottom:medium 1px black;" />
                <input type="hidden" name="DistributionFormatsType" id="DistributionFormatsType" value="@modelDatatype" />
                @for (int hidden = indexFirstDistributionElement; hidden < distribution.Formats.Count + indexFirstDistributionElement; hidden++)
                {
                    if (hidden == indexFirstDistributionElement)
                    {
                        <div class="form-group">
                            <div class="row units-of-distribution-row">
                                <label for="UnitsOfDistribution" class="col-md-3 control-label">Geografisk distribusjonsinndeling</label>
                                <div class="col-md-8">
                                    @{ int distrID = 0;
                                        string UnitsOfDistribution = distribution.Details.UnitsOfDistribution != null ? distribution.Details.UnitsOfDistribution : "";
                                        var selectedUnits = System.Text.RegularExpressions.Regex.Split(UnitsOfDistribution, ", ");
                                        foreach (var distro in ViewBag.UnitsOfDistributionValues as SelectList)
                                        {
                                            string inputName = "DistributionsFormats[" + indexFirstDistributionElement + "].UnitsOfDistribution" + distrID;
                                            string unitschecked = "";
                                            if (selectedUnits.Contains(distro.Value))
                                            {
                                                unitschecked = "checked";
                                            }
                                            <label class="checkbox-inline">
                                                <input onchange="updateUnitsOfDistributionHiddenFieldElements(event)" type="checkbox" id="@inputName" @unitschecked name="@inputName" value="@distro.Value"> @distro.Text
                                            </label>
                                            distrID++;
                                        }
                                    }
                                </div>
                            </div>
                        </div>

                        if (!Model.IsDatasetOrSeriesOrSoftware())
                        {
                            <div class="form-group">
                                <div class="row">
                                    <label for="DistributionName" class="col-md-2 control-label">Lagnavn</label>
                                    <div class="col-md-9">
                                        <p class="help-text bg-success" id="help-text-DistributionName" style="display: none">
                                            Fylles bare ut for tjenester, og kun hvis metadataene gjelder et enkelt lag eller gruppelag i tjenesten og ikke hele tjenesten.
                                        </p>
                                        <input class="distribution-name form-control" id="DistributionsFormats[@indexFirstDistributionElement].Name" name="DistributionsFormats[@indexFirstDistributionElement].Name" type="text" value="@distribution.Details.Name" placeholder="Skriv inn" onkeyup="setNameHiddenFieldElements(event, value)">
                                    </div>
                                    <div class="col-md-1">
                                        <p class="form-control-static">
                                            <a href="#" data-help-text-id="help-text-DistributionName" class="badge help-text-toggle">?</a>
                                        </p>
                                    </div>
                                </div>
                            </div>
                        }
                    }
                }

                @if ((Model.IsDataset() || Model.IsDatasetSeries()) && indexDistribution > 0)
                {
                    <div class="row">
                        <div class="col-md-12"><button name="action" value="@UI.Button_Remove_Distribution-@(indexFirstDistributionElement)-@(distribution.Formats.Count + indexFirstDistributionElement)" class="btn btn-default pull-right">@UI.Button_Remove_Distribution</button></div>
                    </div>
                }
            </div>
        </div>
                                                if (distribution.Formats.Count == 0)
                                                {
                                                    index++;
                                                }
                                                indexDistribution++;
                                            }
                                        }
@if (Model.IsDataset() || Model.IsDatasetSeries())
{
    <div class="row">
        <div class="col-md-12"><button name="action" value="@UI.Button_Add_Distribution" class="btn btn-default pull-right" style="opacity: 0.75;">@UI.Button_Add_Distribution</button></div>
    </div>
}
<hr style="border-bottom:medium 1px black;" />
@if (Model.IsDataset() || Model.IsDatasetSeries())
{
    <div id="ReferenceSystemsDiv">
        @if (Model.ReferenceSystems == null)
        {
            <button class="btn btn-default" id="newReferencesystem">Nytt referansesystem</button>
        }

        @if (Model.ReferenceSystems != null)
        {

            for (int r = 0; r < Model.ReferenceSystems.Count; r++)
            {
                string rowID = "referenceRow" + r;
                <div id="@rowID" class="form-group">
                    <label for="referenceSystems[@r].CoordinateSystem" class="col-md-3 control-label">Romlig<br />referansesystem</label>
                    <div class="col-md-3">
                        <div class="custom-select">
                            <select class="@classFormat" id="referenceSystems[@r].CoordinateSystem" name="referenceSystems[@r].CoordinateSystem" onchange="document.getElementById('referenceSystems[@r].Namespace').value='EPSG'">
                                <option value="@Model.ReferenceSystems[r].CoordinateSystem">
                                    @Model.ReferenceSystems[r].CoordinateSystem
                                </option>
                                @foreach (SelectListItem opt in ViewBag.ReferenceSystemsValues)
                                {
                                    string selectedRef = opt.Value == Model.ReferenceSystems[r].CoordinateSystem ? "selected" : "";
                                    <option value="@opt.Value" @selectedRef>@opt.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                    <label for="referenceSystems[@r].Namespace" class="col-md-1" style="text-align: right;">Koderom</label>
                    <div class="col-md-2">
                        @{string refspaceValue = Model.ReferenceSystems[r].Namespace != null ? Model.ReferenceSystems[r].Namespace : "EPSG";}
                        <input type="text" id="referenceSystems[@r].Namespace" name="referenceSystems[@r].Namespace" value="@refspaceValue" readonly class="form-control" />
                    </div>
                    <div class="col-md-2">
                        @if (r == 0)
                        {
                            <button class="btn btn-default" id="newReferencesystem">Nytt ref.sy.</button>

                            <div class="form-group">
                                <div class="col-md-12">
                                    <p class="help-text bg-success" id="help-text-ReferenceSystem" style="display: none">
                                        Oppgi hvilke koordinatsystemer datasettet leveres i
                                    </p>
                                </div>
                            </div>

                        }
                        @if (r > 0)
                        {
                            <button class="btn btn-default" id="delReferenceSystem[@r]" onclick="removeReferenceSystem(@r)">Slett</button>
                        }
                    </div>
                    <div class="col-md-1">
                        <span class="form-control-static">
                            <a href="#" data-help-text-id="help-text-ReferenceSystem" class="badge help-text-toggle">?</a>
                        </span>
                    </div>
                </div>
                                }
                            }
    </div>
                            if (Model.ReferenceSystems != null)
                            {
                                <input type="hidden" name="ReferenceSystemsCount" id="ReferenceSystemsCount" value="@Model.ReferenceSystems.Count" />
                            }
                            else
                            {
                                <input type="hidden" name="ReferenceSystemsCount" id="ReferenceSystemsCount" value="0" />
                                }

                            }
<input type="hidden" name="DistributionFormatsCount" id="DistributionFormatsCount" value="@(((Model.DistributionsFormats == null || Model.DistributionsFormats.Count == 0)  ? "1" : Model.DistributionsFormats.Count.ToString()))" />
<script type="text/javascript">
    function getUnitsOfDistribution(i, distr) {
        var numberOfUnits = document.getElementById('DistributionsFormats[' + i + '].UnitsOfDistributionCount').value;
        var UnitsOfDistributionString = '';
        for (var n = 0; n < numberOfUnits; n++) {
            var unitValue = document.getElementById('DistributionsFormats[' + i + '].UnitsOfDistribution' + n).value;
            var unitChecked = document.getElementById('DistributionsFormats[' + i + '].UnitsOfDistribution' + n).checked;
            if (unitChecked) {
                UnitsOfDistributionString = UnitsOfDistributionString + unitValue + ', ';
            }
        }
        UnitsOfDistributionString = UnitsOfDistributionString.slice(0, -2);
        document.getElementById('DistributionsFormats[' + i + '].UnitsOfDistribution').value = UnitsOfDistributionString;
    }

    function checkForSpatialRepresentation() {
        if ($('#SpatialRepresentation').val() == "")
            alert('Vennligst velg først representasjonsform');
    }

    @if(ViewBag.NewDistribution)
    {
        @:location.hash = "#distribution-@(indexDistribution -1)";
        }

</script>