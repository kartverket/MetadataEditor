@model Kartverket.MetadataEditor.Models.MetadataViewModel

<div class="form-group required has-feedback">
    <label for="DistributionProtocol" class="col-md-3 control-label">Distribusjonstype</label>
    <div class="col-sm-6">
        <p class="help-text bg-success" id="help-text-DistributionProtocol" style="display: none">
            Velg riktig lenketype for ressursen (datasette/tjenesten/websiden)
        </p>
        <div class="custom-select">
            @Html.DropDownList("DistributionProtocol", ViewBag.predefinedDistributionProtocols as SelectList, "-- Velg distribusjonstype  --", new { @class = "form-control" })
        </div>
        <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
    </div>
    <div class="col-md-1 col-md-offset-2">
        <p class="form-control-static">
            <a href="#" data-help-text-id="help-text-DistributionProtocol" class="badge help-text-toggle">?</a>
        </p>
    </div>
</div>


<div class="form-group">
    <label for="DistributionUrl" class="col-md-3 control-label">URL</label>
    <div class="col-md-8">
        <p class="help-text bg-success" id="help-text-DistributionUrl" style="display: none">
            Fyll inn adresse til nedlastningsside/webside eller tjeneste. For tjenester skal URL angis med lenke til GetCapabilities (service og request på fylles ut).
        </p>
        @Html.EditorFor(m => m.DistributionUrl)
    </div>
    <div class="col-md-1">
        <p class="form-control-static">
            <a href="#" data-help-text-id="help-text-DistributionUrl" class="badge help-text-toggle">?</a>
        </p>
    </div>
</div>


@if (Model.IsDataset() || Model.IsDatasetSeries())
{
    <div class="form-group">
        <label for="SpatialRepresentation" class="col-md-3 control-label">Representasjonsform</label>
        <div class="col-md-3">
            <div class="custom-select">
                @Html.DropDownList("SpatialRepresentation", ViewBag.SpatialRepresentationValues as SelectList, String.Empty, new { @class = "form-control" })
            </div>
        </div>
    </div>
}
@if (Model.IsDataset() || Model.IsDatasetSeries())
{
    <hr style="border-bottom:medium 1px black;" />
}
@{string classFormat = "form-control";
    if (ViewContext.ViewData.ModelState.ContainsKey("DistributionFormats"))
    {
        classFormat = "input-validation-error form-control";
    }
}
<div id="distributionFormatDiv">
    @{ string modelDatatype = "service"; }
    @for (int f = 0; f < Model.DistributionFormats.Count; f++)
    {
        string rowID = "formatRow" + f;
        <div id="@rowID" class="form-group required has-feedback">
            <label for="distributionFormats[@f].Name" class="col-md-3 control-label">Format</label>
            <div class="col-md-8">
                @if (f == 0)
                {
                    <p class="help-text bg-success" id="help-text-DistributionFormat" style="display: none">
                        Flere format kan angis. Versjon av formatet som leveres via filer eller tjenester, for eksempel gml 3.2.1.
                    </p>
                }
                <div class="row">
                    <div class="col-md-4">
                        @if (Model.IsDataset() || Model.IsDatasetSeries())
                {
                    modelDatatype = "dataset";
                            <div class="custom-select">
                                <select class="form-control @classFormat" id="distributionFormats[@f].Name" name="distributionFormats[@f].Name" onclick="checkForSpatialRepresentation(@f)">
                                    @if (!string.IsNullOrEmpty(Model.DistributionFormats[f].Name))
                                    {
                                        <option value="@Model.DistributionFormats[f].Name">@Model.DistributionFormats[f].Name</option>
                                    }
                                    else
                                    {
                                        <option value="" disabled>Klikk for å velge</option>
                                    }
                                </select>
                            </div>
                            <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                        }
                        else
                        {
                            <input id="distributionFormats[@f].Name" name="distributionFormats[@f].Name" type="text" value="@Model.DistributionFormats[f].Name" class="@classFormat" />
                            <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                        }
                    </div>
                    <label for="distributionFormats[@f].Version" class="col-md-2 control-label">Versjon</label>
                    <div class="col-md-3">
                        <input type="text" id="distributionFormats[@f].Version" name="distributionFormats[@f].Version" value="@Model.DistributionFormats[f].Version" />
                    </div>
                    <div class="col-md-3">
                        @if (f == 0)
                        {<button class="btn btn-default" id="newDistributionFormat">Nytt format</button>}
                        @if (f > 0)
                        {<button class="btn btn-default" id="delDistributionFormat[@f]" onclick="removeDistributionFormat(@f)">Slett</button>}
                    </div>
                </div>
            </div>



            <div class="col-md-1">
                @if (f == 0)
                {
                    <span class="form-control-static">
                        <a href="#" data-help-text-id="help-text-DistributionFormat" class="badge help-text-toggle">?</a>
                    </span>
                }
            </div>

        </div>
    }
</div>
<hr style="border-bottom:medium 1px black;" />
<input type="hidden" name="DistributionFormatsCount" id="DistributionFormatsCount" value="@Model.DistributionFormats.Count" />
<input type="hidden" name="DistributionFormatsType" id="DistributionFormatsType" value="@modelDatatype" />



<div class="form-group">
    <label for="UnitsOfDistribution" class="col-sm-3 control-label">Geografisk distribusjonsinndeling</label>
    <div class="col-sm-8">
        @{ int distrID = 0;
            string UnitsOfDistribution = Model.UnitsOfDistribution != null ? Model.UnitsOfDistribution : "";
            var selectedUnits = System.Text.RegularExpressions.Regex.Split(UnitsOfDistribution, ", ");
            foreach (var distribution in ViewBag.UnitsOfDistributionValues as SelectList)
            {
                string inputName = "UnitsOfDistribution" + distrID;
                string unitschecked = "";
                if (selectedUnits.Contains(distribution.Value))
                { unitschecked = "checked"; }
                <label class="checkbox-inline"><input onchange="getUnitsOfDistribution()" type="checkbox" id="@inputName" @unitschecked name="@inputName" value="@distribution.Value"> @distribution.Text</label>
                distrID++;
            }

        }
        <script type="text/javascript">
            function getUnitsOfDistribution() {
                var numberOfUnits = document.getElementById('UnitsOfDistributionCount').value;
                var UnitsOfDistributionString = '';
                for (var n = 0; n < numberOfUnits; n++) {
                    var unitValue = document.getElementById('UnitsOfDistribution' + n).value;
                    var unitChecked = document.getElementById('UnitsOfDistribution' + n).checked;
                    if (unitChecked) {
                        UnitsOfDistributionString = UnitsOfDistributionString + unitValue + ', ';
                    }
                }
                UnitsOfDistributionString = UnitsOfDistributionString.slice(0, -2);
                document.getElementById('UnitsOfDistribution').value = UnitsOfDistributionString;
            }

            function checkForSpatialRepresentation(formatID) {
                if (document.getElementById('distributionFormats[' + formatID + '].Name').length <= 1)
                    alert('Vennligst velg først representasjonsform');

            }

        </script>
        <input type="hidden" id="UnitsOfDistribution" name="UnitsOfDistribution" value="@Model.UnitsOfDistribution">
        <input type="hidden" id="UnitsOfDistributionCount" name="UnitsOfDistributionCount" value="@distrID">
    </div>
</div>

@if (!Model.IsDatasetOrSeriesOrSoftware())
{
    <div class="form-group">
        <label for="DistributionName" class="col-sm-2 control-label">Lagnavn</label>
        <div class="col-sm-9">
            <p class="help-text bg-success" id="help-text-DistributionName" style="display: none">
                Fylles bare ut for tjenester, og kun hvis metadataene gjelder et enkelt lag eller gruppelag i tjenesten og ikke hele tjenesten.
            </p>
            @Html.EditorFor(m => m.DistributionName)
        </div>
        <div class="col-sm-1">
            <p class="form-control-static">
                <a href="#" data-help-text-id="help-text-DistributionName" class="badge help-text-toggle">?</a>
            </p>
        </div>
    </div>
}

@if (Model.IsDataset() || Model.IsDatasetSeries())
{
    <hr style="border-bottom:medium 1px black;" />
    <div id="ReferenceSystemsDiv">
        @if (Model.ReferenceSystems == null)
        {
            <button class="btn btn-default" id="newReferencesystem">Nytt referansesystem</button>
        }

        @if (Model.ReferenceSystems != null)
        {

            for (int f = 0; f < Model.ReferenceSystems.Count; f++)
            {
                string rowID = "referenceRow" + f;
                <div id="@rowID" class="form-group">
                    <label for="referenceSystems[@f].CoordinateSystem" class="col-md-3 control-label">Romlig<br />referansesystem</label>
                    <div class="col-md-3">
                        <div class="custom-select">
                            <select class="@classFormat" id="referenceSystems[@f].CoordinateSystem" name="referenceSystems[@f].CoordinateSystem" onchange="document.getElementById('referenceSystems[@f].Namespace').value='EPSG'">
                                <option value="@Model.ReferenceSystems[f].CoordinateSystem">
                                    @Model.ReferenceSystems[f].CoordinateSystem
                                </option>
                                @foreach (SelectListItem opt in ViewBag.ReferenceSystemsValues)
                                {
                                    string selectedRef = opt.Value == Model.ReferenceSystems[f].CoordinateSystem ? "selected" : "";
                                    <option value="@opt.Value" @selectedRef>@opt.Text</option>
                                }
                            </select>
                        </div>
                    </div>
                    <label for="referenceSystems[@f].Namespace" class="col-md-1" style="text-align: right;">Koderom</label>
                    <div class="col-md-2">
                        @{string refspaceValue = Model.ReferenceSystems[f].Namespace != null ? Model.ReferenceSystems[f].Namespace : "EPSG";}
                        <input type="text" id="referenceSystems[@f].Namespace" name="referenceSystems[@f].Namespace" value="@refspaceValue" readonly class="form-control" />
                    </div>
                    <div class="col-md-2">
                        @if (f == 0)
                        {
                            <button class="btn btn-default" id="newReferencesystem">Nytt ref.sy.</button>

                            <div class="form-group">
                                <div class="col-sm-12">
                                    <p class="help-text bg-success" id="help-text-ReferenceSystem" style="display: none">
                                        Her legger man inn referanser til unik identifisering av datasett og datasettserier som beskrives.
                                    </p>
                                </div>
                            </div>

                        }
                        @if (f > 0)
                        {
                            <button class="btn btn-default" id="delReferenceSystem[@f]" onclick="removeReferenceSystem(@f)">Slett</button>
                        }
                    </div>
                    <div class="col-md-1">
                        <span class="form-control-static">
                            <a href="#" data-help-text-id="help-text-ReferenceSystem" class="badge help-text-toggle">?</a>
                        </span>
                    </div>
                </div>
                                }
                            }
    </div>
                            if (Model.ReferenceSystems != null)
                            {
                                <input type="hidden" name="ReferenceSystemsCount" id="ReferenceSystemsCount" value="@Model.ReferenceSystems.Count" />
                            }
                            else
                            {
                                <input type="hidden" name="ReferenceSystemsCount" id="ReferenceSystemsCount" value="0" />
                                }

                            }