@model Kartverket.MetadataEditor.Models.SimpleMetadataViewModel
@using Resources
@using Kartverket.MetadataEditor.Helpers
@{
    ViewBag.Title = @Resources.UI.EditMetadata;
    bool showProductSheetGeneratorUrl = false;
    var ProductSheetGeneratorUrl = System.Web.Configuration.WebConfigurationManager.AppSettings["ProductSheetGeneratorUrl"];
    if (ProductSheetGeneratorUrl != null && ProductSheetGeneratorUrl != "")
        showProductSheetGeneratorUrl = true;
}

<form action="@Url.Action("Edit")" method="post" class="form form-horizontal" role="form" onkeydown="@(TempData["success"] != null ? "removeokmsg();" : "" )">
    @Html.HiddenFor(m => m.Uuid)
    @Html.HiddenFor(m => m.DateMetadataUpdated)
    @Html.HiddenFor(m => m.HierarchyLevel)

    <div id="parentIdentifier" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="parentIdentifier" aria-hidden="true">
        @Html.Partial("_Parent", Model)
    </div>

    @section ActionMenu {
        <div class="btn-group">
            @if (Html.SimpleMetadataEnabled())
            {
                <a href="@Url.Action("Edit", "Metadata", new { uuid = @Model.Uuid, editor = "standard" })" class="btn btn-sm btn-default" style="background-color:Highlight;">
                    <span class="glyphicon glyphicon-share-alt"></span> Vis standard editor
                </a>
            }
            <a href="@ViewBag.KartkatalogViewUrl" target="_blank" class="btn btn-sm btn-default">
                <span class="glyphicon glyphicon-share-alt"></span> Vis i kartkatalogen
            </a>
            @if (Model.IsService() && string.IsNullOrWhiteSpace(Model.ParentIdentifier))
            {
                if (@Model.DistributionProtocol != null && @Model.DistributionProtocol.Contains("OGC:WMS"))
                {
                    <a href="@Url.Action("Index", "Service", new { uuid = @Model.Uuid })" class="btn btn-sm btn-default">
                        <span class="glyphicon glyphicon-plus-sign"></span> Opprett metadata for tjenestelag
                    </a>
                }
                if (@Model.DistributionProtocol != null && @Model.DistributionProtocol.Contains("OGC:WFS"))
                {
                    <a href="@Url.Action("Index", "ServiceWfs", new { uuid = @Model.Uuid })" class="btn btn-sm btn-default">
                        <span class="glyphicon glyphicon-plus-sign"></span> Opprett metadata for tjenestelag
                    </a>
                }
            }
            @if (Model.IsDataset() && showProductSheetGeneratorUrl)
            {
                <a href="@ViewBag.CreateProductSheetUrl" class="btn btn-sm btn-default"><span class="glyphicon glyphicon-list-alt"></span> Opprett produktark</a>
            }

                <a href="#" role="button" data-toggle="modal" id="parentIdentifierLink" data-target="#parentIdentifier" class="btn btn-sm btn-default"><span class="glyphicon glyphicon-list-alt"></span> Koble til metadata</a>
            
        </div>
    }


    <div class="pull-right">
        <p class="text-right">
            <small>UUID: @Model.Uuid</small><br />
            <small>Metadata sist oppdatert: @String.Format("{0:dd.MM.yyyy}", Model.DateMetadataUpdated)</small>
            <br />
            <small>
                <div class="label @Model.GetInnholdstypeCSS()">@Model.GetInnholdstype()</div>

                @if (!string.IsNullOrWhiteSpace(Model.ParentIdentifier) && Model.HierarchyLevel == "service")
                {
                    <span>[<a href="@Url.Action("Edit", new { uuid = @Model.ParentIdentifier})">Lenke til tjenesten</a>]</span>
                }

            </small>
        </p>
        <script>
            function hideshow(which) {
                if (!document.getElementById)
                    return;
                if (which.style.visibility == "visible") {
                    which.style.display = "none";
                    which.style.visibility = "hidden";
                }
                else {
                    which.style.display = "inline-block";
                    which.style.visibility = "visible";
                }
            }
        </script>
        <div id="validation" style="display: none; visibility: hidden;">
            Validert <span id="validatedDate"></span>: <span id="validationStatus"></span>, <a style="cursor:pointer" class="alert-info" onclick="javascript: hideshow(document.getElementById('validationResults'))">detaljer</a>
        </div>
        <div id="validationResults" style="display:inline-block; visibility:hidden; position:absolute; width: 400px; height: auto; z-index: 3; background-color: white; border: 1px solid black;">
        </div>
    </div>

    <h3>@ViewBag.Title</h3>
    <h2>@Model.Title</h2>

    @if (ViewBag.Saved == true)
    {
        <div class="alert alert-success">
            Metadata ble lagret.
        </div>
    }
    @if (ViewBag.ErrorMessage != null)
    {
        <div class="alert alert-danger">
            Det har oppstått en feil: @ViewBag.ErrorMessage
        </div>
    }

    @Html.ValidationSummary(false, "Skjemaet er ikke korrekt utfylt. Vennligst rett opp følgende feil og mangler:", new { @class = "alert alert-danger" })



    <ul class="nav nav-tabs" style="clear:both">
        <li class="active"><a href="#home" id="homelink" data-toggle="tab">Påkrevd</a></li>
        <li><a href="#optional" id="optionallink" data-toggle="tab">Valgfritt</a></li>
    </ul>


    <div class="tab-content">
        <div class="tab-pane active" id="home">
            @Html.Partial("_Basic", Model)
        </div>

        <div class="tab-pane" id="optional">
            @Html.Partial("_Optional", Model)
        </div>
    </div>


    <div class="form-group">
        <div class="col-sm-12 text-right">
            <button onclick="location.href='@Url.Action("ConfirmDelete")?uuid=@Model.Uuid';return false;" name="action" type="submit" class="btn btn-primary" value="">Slett</button>
            <input type="hidden" name="published" value="true" />
            <button name="action" type="submit" class="btn btn-primary" value="@UI.Button_Save">@UI.Button_Save</button>

        </div>
    </div>


</form>

@section scripts {
    <script>
        $(function () {

            //  add warning sign to tabs containing input fields with error.
            $('.input-validation-error').each(function () {
                var $inputElement = $(this);
                $inputElement.closest('.form-group').addClass('has-error');

                var id = $inputElement.closest(".tab-pane").attr('id');
                var $tabLink = $('ul.nav-tabs a[href=#' + id + ']');

                $tabLink.parent().addClass("has-error");

                var warning = $tabLink.parent().find('span.glyphicon-warning-sign');
                if (warning.length == 0) {
                    $tabLink.before('<span class="glyphicon glyphicon-warning-sign" title="Skillearket inneholder feil og mangler som må rettes opp før innsending av skjemaet."></span>');
                }
            });

            var menu_state = $.cookie('navtabselected');

            $('#homelink').click(function (event) {
                $.cookie('navtabselected', 'home');
            });

            $('#timeandspacelink').click(function (event) {
                $.cookie('navtabselected', 'optional');
            });

            if (menu_state == 'home' || menu_state == null)
                $('#homelink').click();
            else if (menu_state == 'optional')
                $('#optional').click();

            $('#Abstract').autosize();
            $('#SupplementalDescription').autosize();
            $('#SpecificUsage').autosize();

            // help text

            $("a.help-text-toggle").click(function (event) {
                event.preventDefault();
                var helpTextId = $(this).data("help-text-id");
                $("#" + helpTextId).toggle();
            });

            // add help icon to each help text paragraph
            $(".help-text").prepend("<span class=\"badge\">?</span> ");

            // bounding box

            var $states = $('select#bboxState');
            var $counties = $('select#bboxCounty');

            var $countyList = $counties.find('option').clone();

            $states.change(function () {
                var $selectedStateNumber = $(this).find('option:selected').data('statenumber');
                var regex = new RegExp("^" + $selectedStateNumber);
                $counties.html($countyList.filter(function () {
                    return regex.test($(this).attr('data-countynumber'));
                }));
            }).change();


            $("button#bboxPrefill").click(function (event) {
                event.preventDefault();

                if ($('#keywords-place li').length == 0)
                {
                    $("input#BoundingBoxNorth").val('');
                    $("input#BoundingBoxSouth").val('');
                    $("input#BoundingBoxEast").val('');
                    $("input#BoundingBoxWest").val('');
                }
                
                var $selectedCounty = $counties.find('option:selected');
                if ( !$("input#BoundingBoxNorth").val() || $selectedCounty.data('north') > $("input#BoundingBoxNorth").val())
                    $("input#BoundingBoxNorth").val($selectedCounty.data('north'));
                if ( !$("input#BoundingBoxSouth").val() || $selectedCounty.data('south') < $("input#BoundingBoxSouth").val())
                    $("input#BoundingBoxSouth").val($selectedCounty.data('south'));
                if ( !$("input#BoundingBoxEast").val() || $selectedCounty.data('east') > $("input#BoundingBoxEast").val())
                    $("input#BoundingBoxEast").val($selectedCounty.data('east'));
                if ( !$("input#BoundingBoxWest").val() || $selectedCounty.data('west') < $("input#BoundingBoxWest").val())
                    $("input#BoundingBoxWest").val($selectedCounty.data('west'));

                $("#keywords-place-text").val($("#bboxCounty option:selected").text());
                $("#keywords-place-add").click();
                $("#keywords-place-text").val('');

            });


            // Check date not in future
            $("#DateUpdated").change(function (event) {
                event.preventDefault();
                var currentDate = new Date();
                var selectedDateStr = $('#DateUpdated').val();
                var selectedDateArr = selectedDateStr.split('.');
                var selectedDate = new Date(selectedDateArr[2], selectedDateArr[1] - 1, selectedDateArr[0]);
                if (selectedDate > currentDate) {
                    alert('Dato kan ikke være i fremtiden');
                    $('#DateUpdated').val(currentDate.getDate() + '.' + (currentDate.getMonth() + 1) + '.' + currentDate.getFullYear())
                }
            });


            $('#uploadDatasetFile').fileupload({
                dataType: 'json',
                url: '/SimpleMetadata/UploadDataset',
                add: function (e, data) {

                    $("#uploadThumbnailButton").on("click", function (event) {
                        event.preventDefault();

                        console.log(data);
                        data.formData = {
                            "uuid": "@Model.Uuid"
                        };

                        data.submit();
                    });
                },
                done: function (e, data) {
                    console.log("File uploaded: " + data.result.filename);                   
                        $("#DistributionUrl").val('@ViewBag.DatasetUrl' + data.result.filename);
                        $('#uploadDatasetStatus').attr('style', 'text-info');
                        $('#uploadDatasetStatus').text('Filen er lastet opp.');
                }
            });



            // keywords

            function addKeyword(selectorPrefix, inputName, deleteLinkAttributes) {
                deleteLinkAttributes = (typeof deleteLinkAttributes === "undefined") ? null : deleteLinkAttributes;

                var $keywordInput = $('#' + selectorPrefix + '-text');

                var newKeyword = $keywordInput.val();

                var elementId = $('ul#' + selectorPrefix + ' li').length;

                var listItemId = selectorPrefix + "-" + elementId;

                var li = $('<li />', { "id": listItemId });
                li.append($('<span />', { "class": "", text: newKeyword }));
                li.append('&nbsp;');

                var link = $('<a />', {
                    "href": "",
                    "class": "keyword-delete",
                    "data-delete": listItemId,
                    "data-list": selectorPrefix + '-text',
                    "data-list-value": newKeyword
                });
                link.append("<small>Slett</small>");

                li.append(link);
                li.append($('<input />', { "type": "hidden", "name": inputName + "[" + elementId + "]", "value": newKeyword }));
  
                $('ul#' + selectorPrefix).append(li);     

                return $keywordInput;
            };

            function addKeywordFromCodeList(selectorPrefix, inputName) {
                var $keywordInput = addKeyword(selectorPrefix, inputName);
                var $selected = $keywordInput.find("option:selected");
                $selected.attr("disabled", "disabled");
                $selected.removeAttr("selected");
            };

            function addKeywordFromTextbox(selectorPrefix, inputName) {
                var $keywordInput = addKeyword(selectorPrefix, inputName);
                $keywordInput.val('');
            }

            $('button#keywords-theme-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-theme-text').val().trim() == '')
                    alert('Vennligst fyll ut tema');
                else
                    addKeywordFromTextbox('keywords-theme', "KeywordsTheme");

            });

            $('button#keywords-place-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-place-text').val().trim() == '')
                    alert('Vennligst fyll ut sted');
                else
                    addKeywordFromTextbox('keywords-place', "KeywordsPlace");
            });


            $('button#keywords-national-theme-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-national-theme-text').val().trim() == '')
                    alert('Vennligst velg Nasjonal temainndeling');
                else
                    addKeywordFromCodeList('keywords-national-theme', "KeywordsNationalTheme");
            });

            $('button#keywords-inspire-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-inspire-text').val().trim() == '')
                    alert('Vennligst velg inspire');
                else
                    addKeywordFromCodeList('keywords-inspire', "KeywordsInspire");
            });

            $('button#keywords-other-add').click(function (event) {
                event.preventDefault();
                if ($('#keywords-other-text').val().trim() == '')
                    alert('Vennligst fyll ut annet');
                else
                    addKeywordFromTextbox('keywords-other', "KeywordsOther");
            });

            // use a delegated event handler to bind to all existing and future delete links
            $('body').on("click", "a.keyword-delete", function (event) {
                event.preventDefault();

                if (confirm('Er du sikker på at du vil slette nøkkelordet?')) {
                    var deleteId = $(this).data('delete');
                    var $selectCodeList = $("select#" + $(this).data('list'));
                    if ($selectCodeList !== undefined) {
                        var selector = 'option:contains("' + $(this).data('list-value') + '")';
                        if ($(this).data('list-value') == "Inspire")
                            InspireRemove();
                        var option = $selectCodeList.children(selector);
                        option.removeAttr('disabled');
                    }

                    var $listItem = $('li#' + deleteId);
                    var $parentList = $listItem.parent();
                    $listItem.remove();

                    $('li', $parentList).each(function (index, value) {
                        var $hiddenItemsForRow = $('input[type=hidden]', value);
                        $hiddenItemsForRow.each(function (hiddenIndex, hiddenValue) {
                            var name = $(hiddenValue).attr("name");
                            //console.log("hidden value old name: " + name);
                            var inputName = name.substring(0, name.indexOf("["));
                            var inputNameWithIndex = inputName + '[' + index + ']';
                            //console.log("new name: " + inputNameWithIndex);
                            $(hiddenValue).attr('name', inputNameWithIndex);
                        });
                    });


                }
            });

        });

    </script>
}