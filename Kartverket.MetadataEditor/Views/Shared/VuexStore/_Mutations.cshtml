<script>
    var Mutations = {
        updateTitle: function (state, payload) {
            state.model.Title = payload;
        },
        updateEnglishTitle: function (state, payload) {
            state.model.EnglishTitle = payload;
        },
        updateResourceReferenceCodespace: function (state, payload) {
            state.model.ResourceReferenceCodespace = payload;
        },
        updateResourceReferenceCode: function (state, payload) {
            state.model.ResourceReferenceCode = payload;
        },
        updateAbstract: function (state, payload) {
            state.model.Abstract = payload;
        },
        updateEnglishAbstract: function (state, payload) {
            state.model.EnglishAbstract = payload;
        },
        updateHelpUrl: function (state, payload) {
            state.model.HelpUrl = payload;
        },
        updateSpecificUsage: function (state, payload) {
            state.model.SpecificUsage = payload;
        },
        updateEnglishSpecificUsage: function (state, payload) {
            state.model.EnglishSpecificUsage = payload;
        },
        updatePurpose: function (state, payload) {
            state.model.Purpose = payload;
        },
        updateEnglishPurpose: function (state, payload) {
            state.model.EnglishPurpose = payload;
        },
        updateDateUpdated: function (state, payload) {
            state.model.DateUpdated = payload;
        },
        updateDatePublished: function (state, payload) {
            state.model.DatePublished = payload;
        },
        updateDateCreated: function (state, payload) {
            state.model.DateCreated = payload;
        },
        updateDateMetadataValidFrom: function (state, payload) {
            state.model.DateMetadataValidFrom = payload;
        },
        updateDateMetadataValidTo: function (state, payload) {
            state.model.DateMetadataValidTo = payload;
        },
        updateMaintenanceFrequency: function (state, payload) {
            state.model.MaintenanceFrequency = payload;
        },
        updateBoundingBoxNorth: function (state, payload) {
            state.model.BoundingBoxNorth = payload;
        },
        updateBoundingBoxEast: function (state, payload) {
            state.model.BoundingBoxEast = payload;
        },
        updateBoundingBoxSouth: function (state, payload) {
            state.model.BoundingBoxSouth = payload;
        },
        updateBoundingBoxWest: function (state, payload) {
            state.model.BoundingBoxWest = payload;
        },
        updateCoverageUrl: function (state, payload) {
            state.model.CoverageUrl = payload;
        },
        updateContactMetadata: function (state, payload) {
            state.model.ContactMetadata = payload;
        },
        updateContactMetadataName: function (state, payload) {
            state.model.ContactMetadata.Name = payload;
        },
        updateContactMetadataEmail: function (state, payload) {
            state.model.ContactMetadata.Email = payload;
        },
        updateContactMetadataOrganization: function (state, payload) {
            state.model.ContactMetadata.Organization = payload;
        },
        updateContactPublisher: function (state, payload) {
            state.model.ContactPublisher = payload;
        },
        updateContactPublisherName: function (state, payload) {
            state.model.ContactPublisher.Name = payload;
        },
        updateContactPublisherEmail: function (state, payload) {
            state.model.ContactPublisher.Email = payload;
        },
        updateContactPublisherOrganization: function (state, payload) {
            state.model.ContactPublisher.Organization = payload;
        },
        updateContactOwner: function (state, payload) {
            state.model.ContactOwner = payload;
        },
        updateContactOwnerName: function (state, payload) {
            state.model.ContactOwner.Name = payload;
        },
        updateContactOwnerEmail: function (state, payload) {
            state.model.ContactOwner.Email = payload;
        },
        updateContactOwnerOrganization: function (state, payload) {
            state.model.ContactOwner.Organization = payload;
        },
        updateUseLimitations: function (state, payload) {
            state.model.UseLimitations = payload;
        },
        updateEnglishUseLimitations: function (state, payload) {
            state.model.EnglishUseLimitations = payload;
        },
        updateAccessConstraints: function (state, payload) {
            state.model.AccessConstraints = payload;
        },
        updateAccessConstraintValues: function (state, payload) {
            state.viewBag.AccessConstraintValues = payload;
        },
        updateUseConstraints: function (state, payload) {
            state.model.UseConstraints = payload;
        },
        updateUseConstraintValues: function (state, payload) {
            state.viewBag.UseConstraintValues = payload;
        },
        updateLicenseTypes: function (state, payload) {
            state.model.LicenseTypes = payload;
        },
        updateLicenseTypesValues: function (state, payload) {
            state.viewBag.LicenseTypesValues = payload;
        },
        updateOtherConstraintsLinkText: function (state, payload) {
            state.model.OtherConstraintsLinkText = payload;
        },
        updateOtherConstraintsLink: function (state, payload) {
            state.model.OtherConstraintsLink = payload;
        },
        updateOtherConstraints: function (state, payload) {
            state.model.OtherConstraints = payload;
        },
        updateEnglishOtherConstraints: function (state, payload) {
            state.model.EnglishOtherConstraints = payload;
        },
        updateSecurityConstraints: function (state, payload) {
            state.model.SecurityConstraints = payload;
        },
        updateSecurityConstraintsValues: function (state, payload) {
            state.viewBag.SecurityConstraintsValues = payload;
        },
        updateSecurityConstraintsNotes: function (state, payload) {
            state.model.SecurityConstraintsNotes = payload;
        }
    }
</script>
