@using Resources

<script type="text/x-template" id="boundingBox-template">
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-md-11">Geografisk utstrekning</div>
                <div v-if="helpText" class="col-md-1">
                    <span v-on:click="helpText.active = !helpText.active" v-bind:class="{active: helpText.active}" class="badge help-text-toggle">?</span>
                </div>
                <div class="clearfix"></div>
            </div>
        </div>
        <div class="panel-body">
            <p v-if="helpText && helpText.active" class="help-text bg-success" v-html="helpText.content"></p>

            <div class="form-group has-feedback">
                <div class="form-group has-feedback">
                    <div class="row">
                        <label class="col-md-2 control-label">{{ areaSelect.label }}</label>


                        <div class="col-md-4">

                            <div class="custom-select-list">
                                <div class="custom-select-list-input-container">
                                    <span v-for="area in $parent.$parent.selectedValues.timeAndSpace.boundingBox.areas" class="custom-select-list-selected">
                                        {{ area.Name }}
                                        <span v-on:click="removeSelectedArea(area)" class="custom-select-list-remove-button"></span>
                                    </span>
                                    <input type="text" class="custom-select-list-input" />
                                </div>

                                <div class="custom-select-list-dropdown-container">
                                    <div class="custom-select-list-dropdown">
                                        <div class="custom-select-list-dropdown-content">

                                            <div v-for="county in areaSelect.counties" class="custom-select-list-option-group">
                                                <p class="custom-select-list-option-group-name">{{ county.Name }}</p>
                                                <ul class="custom-select-list-options area-option-list">
                                                    <li v-on:click="addSelectedArea(county)" v-bind:class="{'is-selected': areaIsSelected(county)}">{{ county.Name }}</li>
                                                    <li v-on:click="addSelectedArea(municipality)" v-bind:class="{'is-selected': areaIsSelected(municipality)}" v-for="municipality in county.Municipalities">{{ municipality.Name }}</li>
                                                    <!-- <li v-on:click="selectArea(area)" v-bind:class="{'is-selected': (!master && area.isSelected) || (master && isMasterSelected(area)) }" v-for="area in areas">{{ area.name }}</li>-->
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <label class="col-md-2 control-label">Eller angi koordinater</label>

                        <div class="col-md-3">
                            <div class="form-group has-feedback no-margin-bottom no-padding-bottom">
                                <div class="input-group">
                                    <span class="input-group-addon">Nord</span>
                                    <input name="BoundingBoxNorth" type="text" v-model="$parent.$parent.model.BoundingBoxNorth" class="form-control" />
                                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                                </div>
                            </div>
                            <div class="form-group has-feedback no-margin-bottom no-padding-bottom">
                                <div class="input-group">
                                    <span class="input-group-addon">Øst</span>
                                    <input name="BoundingBoxEast" type="text" v-model="$parent.$parent.model.BoundingBoxEast" class="form-control" />

                                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                                </div>
                            </div>
                            <div class="form-group has-feedback no-margin-bottom no-padding-bottom">
                                <div class="input-group">
                                    <span class="input-group-addon">Sør</span>
                                    <input name="BoundingBoxSouth" type="text" v-model="$parent.$parent.model.BoundingBoxSouth" class="form-control" />
                                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                                </div>
                            </div>
                            <div class="form-group has-feedback no-margin-bottom no-padding-bottom">
                                <div class="input-group">
                                    <span class="input-group-addon">Vest</span>
                                    <input name="BoundingBoxWest" type="text" v-model="$parent.$parent.model.BoundingBoxWest" class="form-control" />
                                    <span class="glyphicon glyphicon-warning-sign form-control-feedback"></span>
                                </div>
                            </div>


                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</script>


<script>
    var BoundingBox = {
        name: "boundingBox",
        template: "#boundingBox-template",
        props: [],
        components: {
        },
        data: function () {
            return {
                helpText: {
                    active: false,
                    content: 'Skriv inn koordinatverdier for utstrekning, eller bruk  forhåndsdefinerte områdenavn i nedtrekkslisten dersom de geografiske dataene gjelder for et bestemt fylke eller en kommune. Desimalskille er punktum. Du kan også angi koordinatene ved å bruke knappen "Angi i kartet" for å definere et rektangel i Norgeskart.'
                },
                areaSelect:
                {
                    name: '',
                    value: '',
                    label: 'Angi område',
                    type: 'select',
                    counties: [
                        {
                            Name: 'Akershus',
                            CountyCode: '02',
                            BoundingBoxNorth: '60.605148',
                            BoundingBoxSouth: '59.471882',
                            BoundingBoxEast: '11.926978',
                            BoundingBoxWest: '10.328467',
                            Municipalities: this.getMunicipalitiesInCounty('02')
                        }
                    ]
                }

            };
        },
        methods: {
            areaIsSelected: function (area) {
                var areaIsSelected = false;
                this.$parent.$parent.selectedValues.timeAndSpace.boundingBox.areas.forEach(function (selectedArea) {
                    if (area.CountyCode !== undefined) {
                        if (area.CountyCode == selectedArea.CountyCode) areaIsSelected = true;
                    } else if (area.MunicipalityCode !== undefined) {
                        if (area.MunicipalityCode == selectedArea.MunicipalityCode) areaIsSelected = true;
                    }
                })
                return areaIsSelected;
            },
            removeSelectedArea: function (area) {
                var selectedAreaIndex = this.$parent.$parent.selectedValues.timeAndSpace.boundingBox.areas.indexOf(area);
                if (selectedAreaIndex > -1) {
                    this.$parent.$parent.selectedValues.timeAndSpace.boundingBox.areas.splice(selectedAreaIndex, 1);
                }
            },
            addSelectedArea: function (area) {
                if (!this.areaIsSelected(area)) {
                    this.$parent.$parent.selectedValues.timeAndSpace.boundingBox.areas.push(area);
                }
            },
            getMunicipalitiesInCounty: function (countyCode) {
                var municipalitiesInCounty = [];
                this.$parent.$parent.viewBag.Municipalities.forEach(function (municipality) {
                    if (municipality.MunicipalityCode.substring(0, 2) == countyCode) {
                        municipalitiesInCounty.push(municipality);
                    }
                });
                return municipalitiesInCounty;
            },
            getSelectedAreasBoundingBox: function () {
                var boundingBox = {
                    north: '',
                    south: '',
                    east: '',
                    west: ''
                }
                var boundingBoxIsEmpty = true;
                this.$parent.$parent.selectedValues.timeAndSpace.boundingBox.areas.forEach(function (selectedArea) {
                    if (boundingBoxIsEmpty) {
                        boundingBox.north = selectedArea.BoundingBoxNorth;
                        boundingBox.south = selectedArea.BoundingBoxSouth;
                        boundingBox.east = selectedArea.BoundingBoxEast;
                        boundingBox.west = selectedArea.BoundingBoxWest;
                        boundingBoxIsEmpty = false;
                    } else {
                        if (parseFloat(selectedArea.BoundingBoxNorth) > parseFloat(boundingBox.north)) boundingBox.north = selectedArea.BoundingBoxNorth;
                        if (parseFloat(selectedArea.BoundingBoxSouth) > parseFloat(boundingBox.south)) boundingBox.south = selectedArea.BoundingBoxSouth;
                        if (parseFloat(selectedArea.BoundingBoxEast) < parseFloat(boundingBox.east)) boundingBox.east = selectedArea.BoundingBoxEast;
                        if (parseFloat(selectedArea.BoundingBoxWest) < parseFloat(boundingBox.west)) boundingBox.west = selectedArea.BoundingBoxWest;
                    }
                });
                return boundingBox;
            },
            setBoundingBoxCoordinates: function () {
                boundingBox = this.getSelectedAreasBoundingBox();
                this.$parent.$parent.model.BoundingBoxNorth = boundingBox.north;
                this.$parent.$parent.model.BoundingBoxSouth = boundingBox.south;
                this.$parent.$parent.model.BoundingBoxEast = boundingBox.east;
                this.$parent.$parent.model.BoundingBoxWest = boundingBox.west;
            }
        },
        created: function () {

        },
        mounted: function () {
            initCustomSelectList();
        }

    };
</script>

