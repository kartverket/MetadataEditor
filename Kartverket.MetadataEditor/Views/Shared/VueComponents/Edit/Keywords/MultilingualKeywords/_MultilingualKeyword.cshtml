<script type="text/x-template" id="keyword-template">
    <div>
        <div class="form-group has-feedback">
            <div v-if="selectedLanguage == 'no'">
                <span class="form-element-badge">{{ englishKeywordValue }}</span>
                <input v-if="inputType == 'text'" v-bind:name="norwegianName" type="text" v-model="norwegianKeywordValue" class="form-control" />
                <div v-else-if="inputType == 'select'" type="text" class="custom-select">
                    <select v-bind:name="norwegianName" v-model="norwegianKeywordValue" class="form-control">
                        <option v-bind:value="option.Value" v-for="option in options">{{ option.Text }}</option>
                    </select>
                </div>
            </div>

            <div v-else-if="selectedLanguage == 'en'">
                <span class="form-element-badge">{{ this.getNorwegianKeywordOptionTextByValue(norwegianKeywordValue) }}</span>
                <input v-bind:name="englishName" type="text" v-model="englishKeywordValue" class="form-control" />
            </div>

            <div v-else class="row">
                <div class="col-sm-6">
                    <span class="form-element-badge">{{ $root.languages['no'] }}</span>
                    <input v-if="inputType == 'text'" v-bind:name="norwegianName" type="text" v-model="norwegianKeywordValue" class="form-control" />
                    <div v-else-if="inputType == 'select'" type="text" class="custom-select">
                        <select v-bind:name="norwegianName" v-model="norwegianKeywordValue" class="form-control">
                            <option v-bind:value="option.Value" v-for="option in options">{{ option.Text }}</option>
                        </select>
                    </div>
                </div>
                <div class="col-sm-6">
                    <span class="form-element-badge">{{ $root.languages['en'] }}</span>
                    <input v-bind:name="englishName" type="text" v-model="englishKeywordValue" class="form-control" />
                </div>
            </div>

        </div>
    </div>
</script>

<script>
    var MultilingualKeyword = {
        name: "multilingualKeyword",
        template: "#keyword-template",
        props: ['selectedLanguage', 'keywordName', 'inputType', 'keywordIndex', 'keywordKey', 'keywordValue', 'options'],
        components: {
        },
        data: function () {
            return {
                englishKeywordValue: '',
                norwegianKeywordValue: ''
            }
        },
        computed: {
            norwegianName: function () {
                return this.keywordName + '[' + this.keywordIndex + ']';
            },
            englishName: function () {
                return 'KeywordsEnglish' + '[' + this.keywordName + '_' + this.norwegianKeywordValue + ']';
            },
            keywordKeyTest: function () {
                return this.keywordName + '_' + this.keywordValue
            }
        },
        mounted: function () {
            this.englishKeywordValue = this.getEnglishKeywordValue();
            this.norwegianKeywordValue = this.keywordValue;
        },
        methods: {
            getEnglishKeywordValue: function () {
                var englishKeywordValue = '';
                if (this.$root.model.KeywordsEnglish.length) {
                    this.$root.model.KeywordsEnglish.forEach(function (keyword) {
                        if (keyword.Key == this.keywordKey) {
                            englishKeywordValue = keyword.Value;
                            return;
                        }
                    }.bind(this));
                }
                return englishKeywordValue;
            },
            getNorwegianKeywordOptionTextByValue: function (keywordOptionValue) {
                var keywordOptionText = keywordOptionValue;
                if (this.options !== null) {
                    this.options.forEach(function (option) {
                        if (option.Value == keywordOptionValue) {
                            keywordOptionText = option.Text;
                            return;
                        }
                    });
                }
                return keywordOptionText;
            },
            removeKeyword: function () {
                this.$root.removeKeyword(this.keywordIndex, this.keywordName);
            }
        }
    }
</script>
