<script type="text/x-template" id="thumbnails-template">
    <div v-if="$root.selectedValues.thumbnails" class="striped-list">

        <div is="thumbnail" v-bind:image-type="image.Type" v-bind:image-url="image.URL" v-bind:image-index="index" v-for="(image, index) in $root.selectedValues.thumbnails"></div>
    </div>
</script>


@Html.Partial("VueComponents/Edit/Documents/Thumbnails/_Thumbnail")

<script>
    var Thumbnails = {
        name: "thumbnails",
        template: "#thumbnails-template",
        props: ["newImages"],
        components: {
            Thumbnail: Thumbnail
        },
        data: function () {
            return {

            }
        },
        methods: {
            getNewImagesArray: function () {
                var images = [];
                for (var property in this.newImages) {
                    if (this.newImages.hasOwnProperty(property)) {
                        if (property == 'filenamemini') {
                            images.push({
                                URL: this.$root.viewBag.ThumbnailUrl + this.newImages[property],
                                Type: 'miniatyrbilde'
                            });
                        } else if (property == 'filenameMedium') {
                            images.push({
                                URL: this.$root.viewBag.ThumbnailUrl + this.newImages[property],
                                Type: 'medium'
                            });

                        } else if (property == 'filename') {
                            images.push({
                                URL: this.$root.viewBag.ThumbnailUrl + this.newImages[property],
                                Type: 'original'
                            });
                        }
                    }
                }
                if (this.$root.hasCoverageImage) {
                    images.push(this.$root.getSelectedCoverageImage());
                }
                this.$root.setSelectedThumbnails(images);
                return images;
            }

        },
        watch: {
            newImages: function () {
                this.getNewImagesArray();
            }
        },
        mounted: function () {

        }
    };
</script>
