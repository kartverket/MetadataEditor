@using Resources

<script type="text/x-template" id="distribution-item-format-template">
    <div>
        <div class="row">
            <div class="form-group has-feedback" v-bind:class="{'required': formElements.formatName.required}">
                <label v-bind:for="formElements.formatName.id" class="col-md-3 control-label">{{ formElements.formatName.label }}</label>
                <div class="col-md-8">
                    <div class="">
                        <div class="row">
                            <div class="col-md-4">
                                <div v-if="formElements.formatName.type == 'select'" class="custom-select">
                                    <select v-model="formElements.formatName.value"
                                            class="form-control"
                                            v-bind:id="formElements.formatName.id"
                                            v-bind:name="formElements.formatName.name">
                                        <option value="">Velg</option>
                                        <option v-bind:value="option.Value" v-for="option in formatNameOptions">{{ option.Text }}</option>
                                    </select>
                                </div>
                                <div v-else-if="formElements.formatName.type == 'text'">
                                    <input v-model="formElements.formatName.value"
                                           class="form-control"
                                           v-bind:id="formElements.formatName.id"
                                           v-bind:name="formElements.formatName.name"
                                           v-bind:type="formElements.formatName.type" />
                                </div>
                            </div>
                            <label v-bind:for="formElements.formatVersion.id" class="col-md-2 control-label">{{ formElements.formatVersion.label }}</label>
                            <div class="col-md-3">
                                <input v-model="formElements.formatVersion.value"
                                       class="form-control"
                                       v-bind:id="formElements.formatVersion.id"
                                       v-bind:name="formElements.formatVersion.name"
                                       v-bind:type="formElements.formatName.type" />
                            </div>
                            <div class="col-md-3">
                                <span class="btn" v-on:click="$parent.removeDistributionFormat(formatIndex)">Slett</span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div v-for="formElement in hiddenFormElements">
            <input v-model="formElement.value"
                   v-bind:name="formElements.name"
                   type="hidden" />
        </div>
    </div>
</script>

<script>
    var DistributionItemFormat = {
        name: "distributionItemFormat",
        template: "#distribution-item-format-template",
        props: ["format", "formatIndex"],
        data: function () {
            return {
                helpText: { active: false, content: '' },
                formElements: {
                    formatName: {
                        id: 'DistributionsFormats[' + this.formatIndex + '].FormatName',
                        name: 'DistributionsFormats[' + this.formatIndex + '].FormatName',
                        value: this.format.Name,
                        label: 'Format',
                        type: this.$root.isDatasetOrDatasetSeries ? 'select' : 'text',
                        required: true
                    },
                    formatVersion: {
                        id: 'DistributionsFormats[' + this.formatIndex + '].FormatVersion',
                        name: 'DistributionsFormats[' + this.formatIndex + '].FormatVersion',
                        value: this.format.Version,
                        label: 'Versjon',
                        type: 'text',
                        required: true
                    }
                },
            }
        },
        computed: {
            hiddenFormElements: function () {
                return [
                    {
                        id: 'DistributionsFormats[' + this.formatIndex + '].Protocol',
                        name: 'DistributionsFormats[' + this.formatIndex + '].Protocol',
                        value: this.$parent.formElementsInLoop.protocol.value
                    },
                    {
                        id: 'DistributionsFormats[' + this.formatIndex + '].Name',
                        name: 'DistributionsFormats[' + this.formatIndex + '].Name',
                        value: this.$parent.formElements.name.value
                    },
                    {
                        id: 'DistributionsFormats[' + this.formatIndex + '].URL',
                        name: 'DistributionsFormats[' + this.formatIndex + '].URL',
                        value: this.$parent.formElementsInLoop.url.value
                    },
                    {
                        id: 'DistributionsFormats[' + this.formatIndex + '].UnitsOfDistribution',
                        name: 'DistributionsFormats[' + this.formatIndex + '].UnitsOfDistribution',
                        value: this.$parent.formElements.unitsOfDistribution.value
                    },
                    {
                        id: 'DistributionsFormats[' + this.formatIndex + '].Organization',
                        name: 'DistributionsFormats[' + this.formatIndex + '].Organization',
                        value: this.$parent.formElementsInLoop.organization.value
                    },
                ]
            },
            formatNameOptions: function () {
                var selectedSpatialRepresentation = this.$parent.$parent.selectedSpatialRepresentation;
                var distributionFormats = this.$parent.$parent.distributionFormats;
                return distributionFormats[selectedSpatialRepresentation] !== undefined ? distributionFormats[selectedSpatialRepresentation] : [];
            }
        }
    };
</script>

